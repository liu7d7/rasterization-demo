/*

    OpenGL loader generated by glad 0.1.34 on Tue Jun  6 22:35:48 2023.

    Language/Generator: C/C++
    Specification: gl
    APIs: gl=4.6
    Profile: core
    Extensions:
        
    Loader: True
    Local files: False
    Omit khrplatform: False
    Reproducible: False

    Commandline:
        --profile="core" --api="gl=4.6" --generator="cap" --spec="gl" --extensions=""
    Online:
        https://glad.dav1d.de/#profile=core&language=c&specification=gl&loader=on&api=gl%3D4.6
*/


#ifndef __glad_h_
#define __glad_h_

#ifdef __gl_h_
#error OpenGL header already included, remove this include, glad already provides it
#endif
#define __gl_h_

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
#define APIENTRY __stdcall
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY APIENTRY
#endif

#ifdef __cplusplus
extern "C" {
#endif

struct gladGLversionStruct {
  int major;
  int minor;
};

typedef void* (* GLADloadproc)(const char* name);

#ifndef GLAPI
# if defined(GLAD_GLAPI_EXPORT)
                                                                                                                        #  if defined(_WIN32) || defined(__CYGWIN__)
#   if defined(GLAD_GLAPI_EXPORT_BUILD)
#    if defined(__GNUC__)
#     define GLAPI __attribute__ ((dllexport)) extern
#    else
#     define GLAPI __declspec(dllexport) extern
#    endif
#   else
#    if defined(__GNUC__)
#     define GLAPI __attribute__ ((dllimport)) extern
#    else
#     define GLAPI __declspec(dllimport) extern
#    endif
#   endif
#  elif defined(__GNUC__) && defined(GLAD_GLAPI_EXPORT_BUILD)
#   define GLAPI __attribute__ ((visibility ("default"))) extern
#  else
#   define GLAPI extern
#  endif
# else
#  define GLAPI extern
# endif
#endif

GLAPI struct gladGLversionStruct GLVersion;

GLAPI int gladLoadGL(void);

GLAPI int glad_load_gl_loader(GLADloadproc load);

#include "khrplatform.h"

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
typedef int GLint;
typedef unsigned int GLuint;
typedef khronos_int32_t GLclampx;
typedef int GLsizei;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void* GLeglClientBufferEXT;
typedef void* GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
typedef khronos_intptr_t GLintptr;
typedef khronos_intptr_t GLintptrARB;
typedef khronos_ssize_t GLsizeiptr;
typedef khronos_ssize_t GLsizeiptrARB;
typedef khronos_int64_t GLint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64;
typedef khronos_uint64_t GLuint64EXT;
typedef struct __GLsync* GLsync;
struct _cl_context;
struct _cl_event;

typedef void (APIENTRY* GLDEBUGPROC)(GLenum source, GLenum type, GLuint id,
                                     GLenum severity, GLsizei length,
                                     const GLchar* message,
                                     const void* userParam);

typedef void (APIENTRY* GLDEBUGPROCARB)(GLenum source, GLenum type, GLuint id,
                                        GLenum severity, GLsizei length,
                                        const GLchar* message,
                                        const void* userParam);

typedef void (APIENTRY* GLDEBUGPROCKHR)(GLenum source, GLenum type, GLuint id,
                                        GLenum severity, GLsizei length,
                                        const GLchar* message,
                                        const void* userParam);

typedef void (APIENTRY* GLDEBUGPROCAMD)(GLuint id, GLenum category,
                                        GLenum severity, GLsizei length,
                                        const GLchar* message, void* userParam);

typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;

typedef void (APIENTRY* GLVULKANPROCNV)(void);

#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_REPEAT 0x2901
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DOUBLE 0x140A
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_EQUATION 0x8009
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERstruct texEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_struct shaderYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x8814
#define GL_RGB32F 0x8815
#define GL_RGBA16F 0x881A
#define GL_RGB16F 0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_HALF_FLOAT 0x140B
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_SRC1_COLOR 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_SAMPLER_BINDING 0x8919
#define GL_RGB10_A2UI 0x906F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIMESTAMP 0x8E28
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_SAMPLE_SHADING 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_PATCHES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_ISOLINES 0x8E7A
#define GL_QUADS 0x0007
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_FIXED 0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_LOW_FLOAT 0x8DF0
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_HIGH_FLOAT 0x8DF2
#define GL_LOW_INT 0x8DF3
#define GL_MEDIUM_INT 0x8DF4
#define GL_HIGH_INT 0x8DF5
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_RGB565 0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_MAX_VIEWPORTS 0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_COMPUTE_SHADER 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_BUFFER 0x82E0
#define GL_SHADER 0x82E1
#define GL_PROGRAM 0x82E2
#define GL_VERTEX_ARRAY 0x8074
#define GL_QUERY 0x82E3
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_SAMPLER 0x82E6
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_COLOR_COMPONENTS 0x8283
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_COLOR_RENDERABLE 0x8286
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_MIPMAP 0x8293
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_COLOR_ENCODING 0x8296
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_FILTER 0x829A
#define GL_VERstruct texEXTURE 0x829B
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_CLEAR_BUFFER 0x82B4
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_FULL_SUPPORT 0x82B7
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_TYPE 0x92FA
#define GL_ARRAY_SIZE 0x92FB
#define GL_OFFSET 0x92FC
#define GL_BLOCK_INDEX 0x92FD
#define GL_ARRAY_STRIDE 0x92FE
#define GL_MATRIX_STRIDE 0x92FF
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_IS_PER_PATCH 0x92E7
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_DISPLAY_LIST 0x82E7
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STACK_OVERFLOW 0x0503
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_CLEAR_TEXTURE 0x9365
#define GL_LOCATION_COMPONENT 0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_CONTEXT_LOST 0x0507
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_ZERO_TO_ONE 0x935F
#define GL_CLIP_ORIGIN 0x935C
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_TEXTURE_TARGET 0x1006
#define GL_QUERY_TARGET 0x82EA
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_COLOR_TABLE 0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#define GL_PROXY_COLOR_TABLE 0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#define GL_CONVOLUTION_1D 0x8010
#define GL_CONVOLUTION_2D 0x8011
#define GL_SEPARABLE_2D 0x8012
#define GL_HISTOGRAM 0x8024
#define GL_PROXY_HISTOGRAM 0x8025
#define GL_MINMAX 0x802E
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_SHADER_BINARY_FORMAT_SPIR_V 0x9551
#define GL_SPIR_V_BINARY 0x9552
#define GL_PARAMETER_BUFFER 0x80EE
#define GL_PARAMETER_BUFFER_BINDING 0x80EF
#define GL_CONTEXT_FLAG_NO_ERROR_BIT 0x00000008
#define GL_VERTICES_SUBMITTED 0x82EE
#define GL_PRIMITIVES_SUBMITTED 0x82EF
#define GL_VERTEX_SHADER_INVOCATIONS 0x82F0
#define GL_TESS_CONTROL_SHADER_PATCHES 0x82F1
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS 0x82F2
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED 0x82F3
#define GL_FRAGMENT_SHADER_INVOCATIONS 0x82F4
#define GL_COMPUTE_SHADER_INVOCATIONS 0x82F5
#define GL_CLIPPING_INPUT_PRIMITIVES 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES 0x82F7
#define GL_POLYGON_OFFSET_CLAMP 0x8E1B
#define GL_SPIR_V_EXTENSIONS 0x9553
#define GL_NUM_SPIR_V_EXTENSIONS 0x9554
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_TRANSFORM_FEEDBACK_OVERFLOW 0x82EC
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW 0x82ED
#ifndef GL_VERSION_1_0
#define GL_VERSION_1_0 1
GLAPI int GLAD_GL_VERSION_1_0;

typedef void (APIENTRYP PFNGLCULLFACEPROC)(GLenum mode);

GLAPI PFNGLCULLFACEPROC gl_cull_face;

typedef void (APIENTRYP PFNGLFRONTFACEPROC)(GLenum mode);

GLAPI PFNGLFRONTFACEPROC gl_front_face;

typedef void (APIENTRYP PFNGLHINTPROC)(GLenum target, GLenum mode);

GLAPI PFNGLHINTPROC gl_hint;

typedef void (APIENTRYP PFNGLLINEWIDTHPROC)(GLfloat width);

GLAPI PFNGLLINEWIDTHPROC gl_line_width;

typedef void (APIENTRYP PFNGLPOINTSIZEPROC)(GLfloat size);

GLAPI PFNGLPOINTSIZEPROC gl_point_size;

typedef void (APIENTRYP PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);

GLAPI PFNGLPOLYGONMODEPROC gl_polygon_mode;

typedef void (APIENTRYP PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width,
                                          GLsizei height);

GLAPI PFNGLSCISSORPROC gl_scissor;

typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname,
                                                GLfloat param);

GLAPI PFNGLTEXPARAMETERFPROC gl_tex_parameterf;

typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname,
                                                 const GLfloat* params);

GLAPI PFNGLTEXPARAMETERFVPROC gl_tex_parameterfv;

typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname,
                                                GLint param);

GLAPI PFNGLTEXPARAMETERIPROC gl_tex_parameteri;

typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname,
                                                 const GLint* params);

GLAPI PFNGLTEXPARAMETERIVPROC gl_tex_parameteriv;

typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level,
                                             GLint internalformat,
                                             GLsizei width, GLint border,
                                             GLenum format, GLenum type,
                                             const void* pixels);

GLAPI PFNGLTEXIMAGE1DPROC gl_tex_image_1d;

typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level,
                                             GLint internalformat,
                                             GLsizei width, GLsizei height,
                                             GLint border, GLenum format,
                                             GLenum type, const void* pixels);

GLAPI PFNGLTEXIMAGE2DPROC gl_tex_image_2d;

typedef void (APIENTRYP PFNGLDRAWBUFFERPROC)(GLenum buf);

GLAPI PFNGLDRAWBUFFERPROC gl_draw_buffer;

typedef void (APIENTRYP PFNGLCLEARPROC)(GLbitfield mask);

GLAPI PFNGLCLEARPROC gl_clear;

typedef void (APIENTRYP PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green,
                                             GLfloat blue, GLfloat alpha);

GLAPI PFNGLCLEARCOLORPROC gl_clear_color;

typedef void (APIENTRYP PFNGLCLEARSTENCILPROC)(GLint s);

GLAPI PFNGLCLEARSTENCILPROC gl_clear_stencil;

typedef void (APIENTRYP PFNGLCLEARDEPTHPROC)(GLdouble depth);

GLAPI PFNGLCLEARDEPTHPROC gl_clear_depth;

typedef void (APIENTRYP PFNGLSTENCILMASKPROC)(GLuint mask);

GLAPI PFNGLSTENCILMASKPROC gl_stencil_mask;

typedef void (APIENTRYP PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green,
                                            GLboolean blue, GLboolean alpha);

GLAPI PFNGLCOLORMASKPROC gl_color_mask;

typedef void (APIENTRYP PFNGLDEPTHMASKPROC)(GLboolean flag);

GLAPI PFNGLDEPTHMASKPROC gl_depth_mask;

typedef void (APIENTRYP PFNGLDISABLEPROC)(GLenum cap);

GLAPI PFNGLDISABLEPROC gl_disable;

typedef void (APIENTRYP PFNGLENABLEPROC)(GLenum cap);

GLAPI PFNGLENABLEPROC gl_enable;

typedef void (APIENTRYP PFNGLFINISHPROC)(void);

GLAPI PFNGLFINISHPROC gl_finish;

typedef void (APIENTRYP PFNGLFLUSHPROC)(void);

GLAPI PFNGLFLUSHPROC gl_flush;

typedef void (APIENTRYP PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);

GLAPI PFNGLBLENDFUNCPROC gl_blend_func;

typedef void (APIENTRYP PFNGLLOGICOPPROC)(GLenum opcode);

GLAPI PFNGLLOGICOPPROC gl_logic_op;

typedef void (APIENTRYP PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref,
                                              GLuint mask);

GLAPI PFNGLSTENCILFUNCPROC gl_stencil_func;

typedef void (APIENTRYP PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail,
                                            GLenum zpass);

GLAPI PFNGLSTENCILOPPROC gl_stencil_op;

typedef void (APIENTRYP PFNGLDEPTHFUNCPROC)(GLenum func);

GLAPI PFNGLDEPTHFUNCPROC gl_depth_func;

typedef void (APIENTRYP PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);

GLAPI PFNGLPIXELSTOREFPROC gl_pixel_storef;

typedef void (APIENTRYP PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);

GLAPI PFNGLPIXELSTOREIPROC gl_pixel_storei;

typedef void (APIENTRYP PFNGLREADBUFFERPROC)(GLenum src);

GLAPI PFNGLREADBUFFERPROC gl_read_buffer;

typedef void (APIENTRYP PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width,
                                             GLsizei height, GLenum format,
                                             GLenum type, void* pixels);

GLAPI PFNGLREADPIXELSPROC gl_read_pixels;

typedef void (APIENTRYP PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean* data);

GLAPI PFNGLGETBOOLEANVPROC gl_get_booleanv;

typedef void (APIENTRYP PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble* data);

GLAPI PFNGLGETDOUBLEVPROC gl_get_doublev;

typedef GLenum (APIENTRYP PFNGLGETERRORPROC)(void);

GLAPI PFNGLGETERRORPROC gl_get_error;

typedef void (APIENTRYP PFNGLGETFLOATVPROC)(GLenum pname, GLfloat* data);

GLAPI PFNGLGETFLOATVPROC gl_get_floatv;

typedef void (APIENTRYP PFNGLGETINTEGERVPROC)(GLenum pname, GLint* data);

GLAPI PFNGLGETINTEGERVPROC gl_get_integerv;

typedef const GLubyte* (APIENTRYP PFNGLGETSTRINGPROC)(GLenum name);

GLAPI PFNGLGETSTRINGPROC gl_get_string;

typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level,
                                              GLenum format, GLenum type,
                                              void* pixels);

GLAPI PFNGLGETTEXIMAGEPROC gl_get_tex_image;

typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname,
                                                    GLfloat* params);

GLAPI PFNGLGETTEXPARAMETERFVPROC gl_get_tex_parameterfv;

typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname,
                                                    GLint* params);

GLAPI PFNGLGETTEXPARAMETERIVPROC gl_get_tex_parameteriv;

typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target,
                                                         GLint level,
                                                         GLenum pname,
                                                         GLfloat* params);

GLAPI PFNGLGETTEXLEVELPARAMETERFVPROC gl_get_tex_level_parameterfv;

typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target,
                                                         GLint level,
                                                         GLenum pname,
                                                         GLint* params);

GLAPI PFNGLGETTEXLEVELPARAMETERIVPROC gl_get_tex_level_parameteriv;

typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC)(GLenum cap);

GLAPI PFNGLISENABLEDPROC gl_is_enabled;

typedef void (APIENTRYP PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);

GLAPI PFNGLDEPTHRANGEPROC gl_depth_range;

typedef void (APIENTRYP PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width,
                                           GLsizei height);

GLAPI PFNGLVIEWPORTPROC gl_viewport;
#endif
#ifndef GL_VERSION_1_1
#define GL_VERSION_1_1 1
GLAPI int GLAD_GL_VERSION_1_1;

typedef void (APIENTRYP PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first,
                                             GLsizei count);

GLAPI PFNGLDRAWARRAYSPROC gl_draw_arrays;

typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count,
                                               GLenum type,
                                               const void* indices);

GLAPI PFNGLDRAWELEMENTSPROC gl_draw_elements;

typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);

GLAPI PFNGLPOLYGONOFFSETPROC gl_polygon_offset;

typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level,
                                                 GLenum internalformat, GLint x,
                                                 GLint y, GLsizei width,
                                                 GLint border);

GLAPI PFNGLCOPYTEXIMAGE1DPROC gl_copy_tex_image_1d;

typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level,
                                                 GLenum internalformat, GLint x,
                                                 GLint y, GLsizei width,
                                                 GLsizei height, GLint border);

GLAPI PFNGLCOPYTEXIMAGE2DPROC gl_copy_tex_image_2d;

typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level,
                                                    GLint xoffset, GLint x,
                                                    GLint y, GLsizei width);

GLAPI PFNGLCOPYTEXSUBIMAGE1DPROC gl_copy_tex_sub_image_1d;

typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level,
                                                    GLint xoffset,
                                                    GLint yoffset, GLint x,
                                                    GLint y, GLsizei width,
                                                    GLsizei height);

GLAPI PFNGLCOPYTEXSUBIMAGE2DPROC gl_copy_tex_sub_image_2d;

typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level,
                                                GLint xoffset, GLsizei width,
                                                GLenum format, GLenum type,
                                                const void* pixels);

GLAPI PFNGLTEXSUBIMAGE1DPROC gl_tex_sub_image_1d;

typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level,
                                                GLint xoffset, GLint yoffset,
                                                GLsizei width, GLsizei height,
                                                GLenum format, GLenum type,
                                                const void* pixels);

GLAPI PFNGLTEXSUBIMAGE2DPROC gl_tex_sub_image_2d;

typedef void (APIENTRYP PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);

GLAPI PFNGLBINDTEXTUREPROC gl_bind_texture;

typedef void (APIENTRYP PFNGLDELETETEXTURESPROC)(GLsizei n,
                                                 const GLuint* textures);

GLAPI PFNGLDELETETEXTURESPROC gl_delete_textures;

typedef void (APIENTRYP PFNGLGENTEXTURESPROC)(GLsizei n, GLuint* textures);

GLAPI PFNGLGENTEXTURESPROC gl_gen_textures;

typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC)(GLuint texture);

GLAPI PFNGLISTEXTUREPROC gl_is_texture;
#endif
#ifndef GL_VERSION_1_2
#define GL_VERSION_1_2 1
GLAPI int GLAD_GL_VERSION_1_2;

typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start,
                                                    GLuint end, GLsizei count,
                                                    GLenum type,
                                                    const void* indices);

GLAPI PFNGLDRAWRANGEELEMENTSPROC gl_draw_range_elements;

typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level,
                                             GLint internalformat,
                                             GLsizei width, GLsizei height,
                                             GLsizei depth, GLint border,
                                             GLenum format, GLenum type,
                                             const void* pixels);

GLAPI PFNGLTEXIMAGE3DPROC gl_tex_image_3d;

typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level,
                                                GLint xoffset, GLint yoffset,
                                                GLint zoffset, GLsizei width,
                                                GLsizei height, GLsizei depth,
                                                GLenum format, GLenum type,
                                                const void* pixels);

GLAPI PFNGLTEXSUBIMAGE3DPROC gl_tex_sub_image_3d;

typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level,
                                                    GLint xoffset,
                                                    GLint yoffset,
                                                    GLint zoffset, GLint x,
                                                    GLint y, GLsizei width,
                                                    GLsizei height);

GLAPI PFNGLCOPYTEXSUBIMAGE3DPROC gl_copy_tex_sub_image_3d;
#endif
#ifndef GL_VERSION_1_3
#define GL_VERSION_1_3 1
GLAPI int GLAD_GL_VERSION_1_3;

typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC)(GLenum texture);

GLAPI PFNGLACTIVETEXTUREPROC gl_active_texture;

typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC)(GLfloat value,
                                                 GLboolean invert);

GLAPI PFNGLSAMPLECOVERAGEPROC gl_sample_coverage;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target,
                                                       GLint level,
                                                       GLenum internalformat,
                                                       GLsizei width,
                                                       GLsizei height,
                                                       GLsizei depth,
                                                       GLint border,
                                                       GLsizei imageSize,
                                                       const void* data);

GLAPI PFNGLCOMPRESSEDTEXIMAGE3DPROC gl_compressed_tex_image_3d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target,
                                                       GLint level,
                                                       GLenum internalformat,
                                                       GLsizei width,
                                                       GLsizei height,
                                                       GLint border,
                                                       GLsizei imageSize,
                                                       const void* data);

GLAPI PFNGLCOMPRESSEDTEXIMAGE2DPROC gl_compressed_tex_image_2d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target,
                                                       GLint level,
                                                       GLenum internalformat,
                                                       GLsizei width,
                                                       GLint border,
                                                       GLsizei imageSize,
                                                       const void* data);

GLAPI PFNGLCOMPRESSEDTEXIMAGE1DPROC gl_compressed_tex_image_1d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target,
                                                          GLint level,
                                                          GLint xoffset,
                                                          GLint yoffset,
                                                          GLint zoffset,
                                                          GLsizei width,
                                                          GLsizei height,
                                                          GLsizei depth,
                                                          GLenum format,
                                                          GLsizei imageSize,
                                                          const void* data);

GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gl_compressed_tex_sub_image_3d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target,
                                                          GLint level,
                                                          GLint xoffset,
                                                          GLint yoffset,
                                                          GLsizei width,
                                                          GLsizei height,
                                                          GLenum format,
                                                          GLsizei imageSize,
                                                          const void* data);

GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gl_compressed_tex_sub_image_2d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target,
                                                          GLint level,
                                                          GLint xoffset,
                                                          GLsizei width,
                                                          GLenum format,
                                                          GLsizei imageSize,
                                                          const void* data);

GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gl_compressed_tex_sub_image_1d;

typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target,
                                                        GLint level, void* img);

GLAPI PFNGLGETCOMPRESSEDTEXIMAGEPROC gl_get_compressed_tex_image;
#endif
#ifndef GL_VERSION_1_4
#define GL_VERSION_1_4 1
GLAPI int GLAD_GL_VERSION_1_4;

typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB,
                                                    GLenum dfactorRGB,
                                                    GLenum sfactorAlpha,
                                                    GLenum dfactorAlpha);

GLAPI PFNGLBLENDFUNCSEPARATEPROC gl_blend_func_separate;

typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC)(GLenum mode,
                                                  const GLint* first,
                                                  const GLsizei* count,
                                                  GLsizei drawcount);

GLAPI PFNGLMULTIDRAWARRAYSPROC gl_multi_draw_arrays;

typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode,
                                                    const GLsizei* count,
                                                    GLenum type,
                                                    const void* const* indices,
                                                    GLsizei drawcount);

GLAPI PFNGLMULTIDRAWELEMENTSPROC gl_multi_draw_elements;

typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);

GLAPI PFNGLPOINTPARAMETERFPROC gl_point_parameterf;

typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC)(GLenum pname,
                                                   const GLfloat* params);

GLAPI PFNGLPOINTPARAMETERFVPROC gl_point_parameterfv;

typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);

GLAPI PFNGLPOINTPARAMETERIPROC gl_point_parameteri;

typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC)(GLenum pname,
                                                   const GLint* params);

GLAPI PFNGLPOINTPARAMETERIVPROC gl_point_parameteriv;

typedef void (APIENTRYP PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green,
                                             GLfloat blue, GLfloat alpha);

GLAPI PFNGLBLENDCOLORPROC gl_blend_color;

typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC)(GLenum mode);

GLAPI PFNGLBLENDEQUATIONPROC gl_blend_equation;
#endif
#ifndef GL_VERSION_1_5
#define GL_VERSION_1_5 1
GLAPI int GLAD_GL_VERSION_1_5;

typedef void (APIENTRYP PFNGLGENQUERIESPROC)(GLsizei n, GLuint* ids);

GLAPI PFNGLGENQUERIESPROC gl_gen_queries;

typedef void (APIENTRYP PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint* ids);

GLAPI PFNGLDELETEQUERIESPROC gl_delete_queries;

typedef GLboolean (APIENTRYP PFNGLISQUERYPROC)(GLuint id);

GLAPI PFNGLISQUERYPROC gl_is_query;

typedef void (APIENTRYP PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);

GLAPI PFNGLBEGINQUERYPROC gl_begin_query;

typedef void (APIENTRYP PFNGLENDQUERYPROC)(GLenum target);

GLAPI PFNGLENDQUERYPROC gl_end_query;

typedef void (APIENTRYP PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname,
                                             GLint* params);

GLAPI PFNGLGETQUERYIVPROC gl_get_queryiv;

typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname,
                                                   GLint* params);

GLAPI PFNGLGETQUERYOBJECTIVPROC gl_get_query_objectiv;

typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname,
                                                    GLuint* params);

GLAPI PFNGLGETQUERYOBJECTUIVPROC gl_get_query_objectuiv;

typedef void (APIENTRYP PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);

GLAPI PFNGLBINDBUFFERPROC gl_bind_buffer;

typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC)(GLsizei n,
                                                const GLuint* buffers);

GLAPI PFNGLDELETEBUFFERSPROC gl_delete_buffers;

typedef void (APIENTRYP PFNGLGENBUFFERSPROC)(GLsizei n, GLuint* buffers);

GLAPI PFNGLGENBUFFERSPROC gl_gen_buffers;

typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC)(GLuint buffer);

GLAPI PFNGLISBUFFERPROC gl_is_buffer;

typedef void (APIENTRYP PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size,
                                             const void* data, GLenum usage);

GLAPI PFNGLBUFFERDATAPROC gl_buffer_data;

typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset,
                                                GLsizeiptr size,
                                                const void* data);

GLAPI PFNGLBUFFERSUBDATAPROC gl_buffer_sub_data;

typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC)(GLenum target,
                                                   GLintptr offset,
                                                   GLsizeiptr size, void* data);

GLAPI PFNGLGETBUFFERSUBDATAPROC gl_get_buffer_sub_data;

typedef void* (APIENTRYP PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);

GLAPI PFNGLMAPBUFFERPROC gl_map_buffer;

typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC)(GLenum target);

GLAPI PFNGLUNMAPBUFFERPROC gl_unmap_buffer;

typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target,
                                                       GLenum pname,
                                                       GLint* params);

GLAPI PFNGLGETBUFFERPARAMETERIVPROC gl_get_buffer_parameteriv;

typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname,
                                                    void** params);

GLAPI PFNGLGETBUFFERPOINTERVPROC gl_get_buffer_pointerv;
#endif
#ifndef GL_VERSION_2_0
#define GL_VERSION_2_0 1
GLAPI int GLAD_GL_VERSION_2_0;

typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB,
                                                        GLenum modeAlpha);

GLAPI PFNGLBLENDEQUATIONSEPARATEPROC gl_blend_equation_separate;

typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum* bufs);

GLAPI PFNGLDRAWBUFFERSPROC gl_draw_buffers;

typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail,
                                                    GLenum dpfail,
                                                    GLenum dppass);

GLAPI PFNGLSTENCILOPSEPARATEPROC gl_stencil_op_separate;

typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func,
                                                      GLint ref, GLuint mask);

GLAPI PFNGLSTENCILFUNCSEPARATEPROC gl_stencil_func_separate;

typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);

GLAPI PFNGLSTENCILMASKSEPARATEPROC gl_stencil_mask_separate;

typedef void (APIENTRYP PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);

GLAPI PFNGLATTACHSHADERPROC gl_attach_shader;

typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC)(GLuint program,
                                                     GLuint index,
                                                     const GLchar* name);

GLAPI PFNGLBINDATTRIBLOCATIONPROC gl_bind_attrib_location;

typedef void (APIENTRYP PFNGLCOMPILESHADERPROC)(GLuint shader);

GLAPI PFNGLCOMPILESHADERPROC gl_compile_shader;

typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC)(void);

GLAPI PFNGLCREATEPROGRAMPROC gl_create_program;

typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC)(GLenum type);

GLAPI PFNGLCREATESHADERPROC gl_create_shader;

typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC)(GLuint program);

GLAPI PFNGLDELETEPROGRAMPROC gl_delete_program;

typedef void (APIENTRYP PFNGLDELETESHADERPROC)(GLuint shader);

GLAPI PFNGLDELETESHADERPROC gl_delete_shader;

typedef void (APIENTRYP PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);

GLAPI PFNGLDETACHSHADERPROC gl_detach_shader;

typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);

GLAPI PFNGLDISABLEVERTEXATTRIBARRAYPROC gl_disable_vertex_attrib_array;

typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);

GLAPI PFNGLENABLEVERTEXATTRIBARRAYPROC gl_enable_vertex_attrib_array;

typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index,
                                                  GLsizei bufSize,
                                                  GLsizei* length, GLint* size,
                                                  GLenum* type, GLchar* name);

GLAPI PFNGLGETACTIVEATTRIBPROC gl_get_active_attrib;

typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index,
                                                   GLsizei bufSize,
                                                   GLsizei* length, GLint* size,
                                                   GLenum* type, GLchar* name);

GLAPI PFNGLGETACTIVEUNIFORMPROC gl_get_active_uniform;

typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC)(GLuint program,
                                                     GLsizei maxCount,
                                                     GLsizei* count,
                                                     GLuint* shaders);

GLAPI PFNGLGETATTACHEDSHADERSPROC gl_get_attached_shaders;

typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC)(GLuint program,
                                                     const GLchar* name);

GLAPI PFNGLGETATTRIBLOCATIONPROC gl_get_attrib_location;

typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname,
                                               GLint* params);

GLAPI PFNGLGETPROGRAMIVPROC gl_get_programiv;

typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC)(GLuint program,
                                                    GLsizei bufSize,
                                                    GLsizei* length,
                                                    GLchar* infoLog);

GLAPI PFNGLGETPROGRAMINFOLOGPROC gl_get_program_info_log;

typedef void (APIENTRYP PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname,
                                              GLint* params);

GLAPI PFNGLGETSHADERIVPROC gl_get_shaderiv;

typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC)(GLuint shader,
                                                   GLsizei bufSize,
                                                   GLsizei* length,
                                                   GLchar* infoLog);

GLAPI PFNGLGETSHADERINFOLOGPROC gl_get_shader_info_log;

typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC)(GLuint shader,
                                                  GLsizei bufSize,
                                                  GLsizei* length,
                                                  GLchar* source);

GLAPI PFNGLGETSHADERSOURCEPROC gl_get_shader_source;

typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC)(GLuint program,
                                                      const GLchar* name);

GLAPI PFNGLGETUNIFORMLOCATIONPROC gl_get_uniform_location;

typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location,
                                               GLfloat* params);

GLAPI PFNGLGETUNIFORMFVPROC gl_get_uniformfv;

typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location,
                                               GLint* params);

GLAPI PFNGLGETUNIFORMIVPROC gl_get_uniformiv;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname,
                                                    GLdouble* params);

GLAPI PFNGLGETVERTEXATTRIBDVPROC gl_get_vertex_attribdv;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname,
                                                    GLfloat* params);

GLAPI PFNGLGETVERTEXATTRIBFVPROC gl_get_vertex_attribfv;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname,
                                                    GLint* params);

GLAPI PFNGLGETVERTEXATTRIBIVPROC gl_get_vertex_attribiv;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index,
                                                          GLenum pname,
                                                          void** pointer);

GLAPI PFNGLGETVERTEXATTRIBPOINTERVPROC gl_get_vertex_attrib_pointerv;

typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC)(GLuint program);

GLAPI PFNGLISPROGRAMPROC gl_is_program;

typedef GLboolean (APIENTRYP PFNGLISSHADERPROC)(GLuint shader);

GLAPI PFNGLISSHADERPROC gl_is_shader;

typedef void (APIENTRYP PFNGLLINKPROGRAMPROC)(GLuint program);

GLAPI PFNGLLINKPROGRAMPROC gl_link_program;

typedef void (APIENTRYP PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count,
                                               const GLchar* const* string,
                                               const GLint* length);

GLAPI PFNGLSHADERSOURCEPROC gl_shader_source;

typedef void (APIENTRYP PFNGLUSEPROGRAMPROC)(GLuint program);

GLAPI PFNGLUSEPROGRAMPROC gl_use_program;

typedef void (APIENTRYP PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);

GLAPI PFNGLUNIFORM1FPROC gl_uniform_1f;

typedef void (APIENTRYP PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0,
                                            GLfloat v1);

GLAPI PFNGLUNIFORM2FPROC gl_uniform_2f;

typedef void (APIENTRYP PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0,
                                            GLfloat v1, GLfloat v2);

GLAPI PFNGLUNIFORM3FPROC gl_uniform_3f;

typedef void (APIENTRYP PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0,
                                            GLfloat v1, GLfloat v2, GLfloat v3);

GLAPI PFNGLUNIFORM4FPROC gl_uniform_4f;

typedef void (APIENTRYP PFNGLUNIFORM1IPROC)(GLint location, GLint v0);

GLAPI PFNGLUNIFORM1IPROC gl_uniform_1i;

typedef void (APIENTRYP PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);

GLAPI PFNGLUNIFORM2IPROC gl_uniform_2i;

typedef void (APIENTRYP PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1,
                                            GLint v2);

GLAPI PFNGLUNIFORM3IPROC gl_uniform_3i;

typedef void (APIENTRYP PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1,
                                            GLint v2, GLint v3);

GLAPI PFNGLUNIFORM4IPROC gl_uniform_4i;

typedef void (APIENTRYP PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count,
                                             const GLfloat* value);

GLAPI PFNGLUNIFORM1FVPROC gl_uniform_1fv;

typedef void (APIENTRYP PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count,
                                             const GLfloat* value);

GLAPI PFNGLUNIFORM2FVPROC gl_uniform_2fv;

typedef void (APIENTRYP PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count,
                                             const GLfloat* value);

GLAPI PFNGLUNIFORM3FVPROC gl_uniform_3fv;

typedef void (APIENTRYP PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count,
                                             const GLfloat* value);

GLAPI PFNGLUNIFORM4FVPROC gl_uniform_4fv;

typedef void (APIENTRYP PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count,
                                             const GLint* value);

GLAPI PFNGLUNIFORM1IVPROC gl_uniform_1iv;

typedef void (APIENTRYP PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count,
                                             const GLint* value);

GLAPI PFNGLUNIFORM2IVPROC gl_uniform_2iv;

typedef void (APIENTRYP PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count,
                                             const GLint* value);

GLAPI PFNGLUNIFORM3IVPROC gl_uniform_3iv;

typedef void (APIENTRYP PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count,
                                             const GLint* value);

GLAPI PFNGLUNIFORM4IVPROC gl_uniform_4iv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC)(GLint location,
                                                   GLsizei count,
                                                   GLboolean transpose,
                                                   const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX2FVPROC gl_uniform_matrix2fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC)(GLint location,
                                                   GLsizei count,
                                                   GLboolean transpose,
                                                   const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX3FVPROC gl_uniform_matrix3fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC)(GLint location,
                                                   GLsizei count,
                                                   GLboolean transpose,
                                                   const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX4FVPROC gl_uniform_matrix_4fv;

typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC)(GLuint program);

GLAPI PFNGLVALIDATEPROGRAMPROC gl_validate_program;

typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);

GLAPI PFNGLVERTEXATTRIB1DPROC gl_vertex_attrib_1d;

typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC)(GLuint index,
                                                  const GLdouble* v);

GLAPI PFNGLVERTEXATTRIB1DVPROC gl_vertex_attrib_1dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);

GLAPI PFNGLVERTEXATTRIB1FPROC gl_vertex_attrib_1f;

typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC)(GLuint index,
                                                  const GLfloat* v);

GLAPI PFNGLVERTEXATTRIB1FVPROC gl_vertex_attrib_1fv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);

GLAPI PFNGLVERTEXATTRIB1SPROC gl_vertex_attrib_1s;

typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC)(GLuint index,
                                                  const GLshort* v);

GLAPI PFNGLVERTEXATTRIB1SVPROC gl_vertex_attrib_1sv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x,
                                                 GLdouble y);

GLAPI PFNGLVERTEXATTRIB2DPROC gl_vertex_attrib_2d;

typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC)(GLuint index,
                                                  const GLdouble* v);

GLAPI PFNGLVERTEXATTRIB2DVPROC gl_vertex_attrib_2dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x,
                                                 GLfloat y);

GLAPI PFNGLVERTEXATTRIB2FPROC gl_vertex_attrib_2f;

typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC)(GLuint index,
                                                  const GLfloat* v);

GLAPI PFNGLVERTEXATTRIB2FVPROC gl_vertex_attrib_2fv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x,
                                                 GLshort y);

GLAPI PFNGLVERTEXATTRIB2SPROC gl_vertex_attrib_2s;

typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC)(GLuint index,
                                                  const GLshort* v);

GLAPI PFNGLVERTEXATTRIB2SVPROC gl_vertex_attrib_2sv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x,
                                                 GLdouble y, GLdouble z);

GLAPI PFNGLVERTEXATTRIB3DPROC gl_vertex_attrib_3d;

typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC)(GLuint index,
                                                  const GLdouble* v);

GLAPI PFNGLVERTEXATTRIB3DVPROC gl_vertex_attrib_3dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x,
                                                 GLfloat y, GLfloat z);

GLAPI PFNGLVERTEXATTRIB3FPROC gl_vertex_attrib_3f;

typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC)(GLuint index,
                                                  const GLfloat* v);

GLAPI PFNGLVERTEXATTRIB3FVPROC gl_vertex_attrib_3fv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x,
                                                 GLshort y, GLshort z);

GLAPI PFNGLVERTEXATTRIB3SPROC gl_vertex_attrib_3s;

typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC)(GLuint index,
                                                  const GLshort* v);

GLAPI PFNGLVERTEXATTRIB3SVPROC gl_vertex_attrib_3sv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC)(GLuint index,
                                                   const GLbyte* v);

GLAPI PFNGLVERTEXATTRIB4NBVPROC gl_vertex_attrib_4nbv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC)(GLuint index,
                                                   const GLint* v);

GLAPI PFNGLVERTEXATTRIB4NIVPROC gl_vertex_attrib_4niv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC)(GLuint index,
                                                   const GLshort* v);

GLAPI PFNGLVERTEXATTRIB4NSVPROC gl_vertex_attrib_4nsv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x,
                                                   GLubyte y, GLubyte z,
                                                   GLubyte w);

GLAPI PFNGLVERTEXATTRIB4NUBPROC gl_vertex_attrib_4nub;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index,
                                                    const GLubyte* v);

GLAPI PFNGLVERTEXATTRIB4NUBVPROC gl_vertex_attrib_4nubv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index,
                                                    const GLuint* v);

GLAPI PFNGLVERTEXATTRIB4NUIVPROC gl_vertex_attrib_4nuiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index,
                                                    const GLushort* v);

GLAPI PFNGLVERTEXATTRIB4NUSVPROC gl_vertex_attrib_4nusv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC)(GLuint index,
                                                  const GLbyte* v);

GLAPI PFNGLVERTEXATTRIB4BVPROC gl_vertex_attrib_4bv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x,
                                                 GLdouble y, GLdouble z,
                                                 GLdouble w);

GLAPI PFNGLVERTEXATTRIB4DPROC gl_vertex_attrib_4d;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC)(GLuint index,
                                                  const GLdouble* v);

GLAPI PFNGLVERTEXATTRIB4DVPROC gl_vertex_attrib_4dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x,
                                                 GLfloat y, GLfloat z,
                                                 GLfloat w);

GLAPI PFNGLVERTEXATTRIB4FPROC gl_vertex_attrib_4f;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC)(GLuint index,
                                                  const GLfloat* v);

GLAPI PFNGLVERTEXATTRIB4FVPROC gl_vertex_attrib_4fv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint* v);

GLAPI PFNGLVERTEXATTRIB4IVPROC gl_vertex_attrib_4iv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x,
                                                 GLshort y, GLshort z,
                                                 GLshort w);

GLAPI PFNGLVERTEXATTRIB4SPROC gl_vertex_attrib_4s;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC)(GLuint index,
                                                  const GLshort* v);

GLAPI PFNGLVERTEXATTRIB4SVPROC gl_vertex_attrib_4sv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC)(GLuint index,
                                                   const GLubyte* v);

GLAPI PFNGLVERTEXATTRIB4UBVPROC gl_vertex_attrib_4ubv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC)(GLuint index,
                                                   const GLuint* v);

GLAPI PFNGLVERTEXATTRIB4UIVPROC gl_vertex_attrib_4uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC)(GLuint index,
                                                   const GLushort* v);

GLAPI PFNGLVERTEXATTRIB4USVPROC gl_vertex_attrib_4usv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size,
                                                      GLenum type,
                                                      GLboolean normalized,
                                                      GLsizei stride,
                                                      const void* pointer);

GLAPI PFNGLVERTEXATTRIBPOINTERPROC gl_vertex_attrib_pointer;
#endif
#ifndef GL_VERSION_2_1
#define GL_VERSION_2_1 1
GLAPI int GLAD_GL_VERSION_2_1;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX2X3FVPROC gl_uniform_matrix2x3fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX3X2FVPROC gl_uniform_matrix3x2fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX2X4FVPROC gl_uniform_matrix2x4fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX4X2FVPROC gl_uniform_matrix_4x2fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX3X4FVPROC gl_uniform_matrix3x4fv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLfloat* value);

GLAPI PFNGLUNIFORMMATRIX4X3FVPROC gl_uniform_matrix_4x3fv;
#endif
#ifndef GL_VERSION_3_0
#define GL_VERSION_3_0 1
GLAPI int GLAD_GL_VERSION_3_0;

typedef void (APIENTRYP PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r,
                                             GLboolean g, GLboolean b,
                                             GLboolean a);

GLAPI PFNGLCOLORMASKIPROC gl_color_maski;

typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index,
                                                GLboolean* data);

GLAPI PFNGLGETBOOLEANI_VPROC gl_get_booleani_v;

typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index,
                                                GLint* data);

GLAPI PFNGLGETINTEGERI_VPROC gl_get_integeri_v;

typedef void (APIENTRYP PFNGLENABLEIPROC)(GLenum target, GLuint index);

GLAPI PFNGLENABLEIPROC gl_enablei;

typedef void (APIENTRYP PFNGLDISABLEIPROC)(GLenum target, GLuint index);

GLAPI PFNGLDISABLEIPROC gl_disablei;

typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC)(GLenum target, GLuint index);

GLAPI PFNGLISENABLEDIPROC gl_is_enabledi;

typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);

GLAPI PFNGLBEGINTRANSFORMFEEDBACKPROC gl_begin_transform_feedback;

typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC)(void);

GLAPI PFNGLENDTRANSFORMFEEDBACKPROC gl_end_transform_feedback;

typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index,
                                                  GLuint buffer,
                                                  GLintptr offset,
                                                  GLsizeiptr size);

GLAPI PFNGLBINDBUFFERRANGEPROC gl_bind_buffer_range;

typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index,
                                                 GLuint buffer);

GLAPI PFNGLBINDBUFFERBASEPROC gl_bind_buffer_base;

typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program,
                                                            GLsizei count,
                                                            const GLchar* const* varyings,
                                                            GLenum bufferMode);

GLAPI PFNGLTRANSFORMFEEDBACKVARYINGSPROC gl_transform_feedback_varyings;

typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program,
                                                              GLuint index,
                                                              GLsizei bufSize,
                                                              GLsizei* length,
                                                              GLsizei* size,
                                                              GLenum* type,
                                                              GLchar* name);

GLAPI PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gl_get_transform_feedback_varying;

typedef void (APIENTRYP PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);

GLAPI PFNGLCLAMPCOLORPROC gl_clamp_color;

typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id,
                                                         GLenum mode);

GLAPI PFNGLBEGINCONDITIONALRENDERPROC gl_begin_conditional_render;

typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC)(void);

GLAPI PFNGLENDCONDITIONALRENDERPROC gl_end_conditional_render;

typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size,
                                                       GLenum type,
                                                       GLsizei stride,
                                                       const void* pointer);

GLAPI PFNGLVERTEXATTRIBIPOINTERPROC gl_vertex_attrib_i_pointer;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname,
                                                     GLint* params);

GLAPI PFNGLGETVERTEXATTRIBIIVPROC gl_get_vertex_attrib_iiv;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index,
                                                      GLenum pname,
                                                      GLuint* params);

GLAPI PFNGLGETVERTEXATTRIBIUIVPROC gl_get_vertex_attrib_iuiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);

GLAPI PFNGLVERTEXATTRIBI1IPROC gl_vertex_attrib_i_1i;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x,
                                                  GLint y);

GLAPI PFNGLVERTEXATTRIBI2IPROC gl_vertex_attrib_i_2i;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x,
                                                  GLint y, GLint z);

GLAPI PFNGLVERTEXATTRIBI3IPROC gl_vertex_attrib_i_3i;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x,
                                                  GLint y, GLint z, GLint w);

GLAPI PFNGLVERTEXATTRIBI4IPROC gl_vertex_attrib_i_4i;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);

GLAPI PFNGLVERTEXATTRIBI1UIPROC gl_vertex_attrib_i_1ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x,
                                                   GLuint y);

GLAPI PFNGLVERTEXATTRIBI2UIPROC gl_vertex_attrib_i_2ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x,
                                                   GLuint y, GLuint z);

GLAPI PFNGLVERTEXATTRIBI3UIPROC gl_vertex_attrib_i_3ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x,
                                                   GLuint y, GLuint z,
                                                   GLuint w);

GLAPI PFNGLVERTEXATTRIBI4UIPROC gl_vertex_attrib_i_4ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC)(GLuint index,
                                                   const GLint* v);

GLAPI PFNGLVERTEXATTRIBI1IVPROC gl_vertex_attrib_i_1iv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC)(GLuint index,
                                                   const GLint* v);

GLAPI PFNGLVERTEXATTRIBI2IVPROC gl_vertex_attrib_i_2iv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC)(GLuint index,
                                                   const GLint* v);

GLAPI PFNGLVERTEXATTRIBI3IVPROC gl_vertex_attrib_i_3iv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC)(GLuint index,
                                                   const GLint* v);

GLAPI PFNGLVERTEXATTRIBI4IVPROC gl_vertex_attrib_i_4iv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index,
                                                    const GLuint* v);

GLAPI PFNGLVERTEXATTRIBI1UIVPROC gl_vertex_attrib_i_1uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index,
                                                    const GLuint* v);

GLAPI PFNGLVERTEXATTRIBI2UIVPROC gl_vertex_attrib_i_2uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index,
                                                    const GLuint* v);

GLAPI PFNGLVERTEXATTRIBI3UIVPROC gl_vertex_attrib_i_3uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index,
                                                    const GLuint* v);

GLAPI PFNGLVERTEXATTRIBI4UIVPROC gl_vertex_attrib_i_4uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC)(GLuint index,
                                                   const GLbyte* v);

GLAPI PFNGLVERTEXATTRIBI4BVPROC gl_vertex_attrib_i_4bv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC)(GLuint index,
                                                   const GLshort* v);

GLAPI PFNGLVERTEXATTRIBI4SVPROC gl_vertex_attrib_i_4sv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index,
                                                    const GLubyte* v);

GLAPI PFNGLVERTEXATTRIBI4UBVPROC gl_vertex_attrib_i_4ubv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC)(GLuint index,
                                                    const GLushort* v);

GLAPI PFNGLVERTEXATTRIBI4USVPROC gl_vertex_attrib_i_4usv;

typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location,
                                                GLuint* params);

GLAPI PFNGLGETUNIFORMUIVPROC gl_get_uniformuiv;

typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program,
                                                       GLuint color,
                                                       const GLchar* name);

GLAPI PFNGLBINDFRAGDATALOCATIONPROC gl_bind_frag_data_location;

typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC)(GLuint program,
                                                       const GLchar* name);

GLAPI PFNGLGETFRAGDATALOCATIONPROC gl_get_frag_data_location;

typedef void (APIENTRYP PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);

GLAPI PFNGLUNIFORM1UIPROC gl_uniform_1ui;

typedef void (APIENTRYP PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0,
                                             GLuint v1);

GLAPI PFNGLUNIFORM2UIPROC gl_uniform_2ui;

typedef void (APIENTRYP PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0,
                                             GLuint v1, GLuint v2);

GLAPI PFNGLUNIFORM3UIPROC gl_uniform_3ui;

typedef void (APIENTRYP PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0,
                                             GLuint v1, GLuint v2, GLuint v3);

GLAPI PFNGLUNIFORM4UIPROC gl_uniform_4ui;

typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count,
                                              const GLuint* value);

GLAPI PFNGLUNIFORM1UIVPROC gl_uniform_1uiv;

typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count,
                                              const GLuint* value);

GLAPI PFNGLUNIFORM2UIVPROC gl_uniform_2uiv;

typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count,
                                              const GLuint* value);

GLAPI PFNGLUNIFORM3UIVPROC gl_uniform_3uiv;

typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count,
                                              const GLuint* value);

GLAPI PFNGLUNIFORM4UIVPROC gl_uniform_4uiv;

typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname,
                                                  const GLint* params);

GLAPI PFNGLTEXPARAMETERIIVPROC gl_tex_parameter_iiv;

typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname,
                                                   const GLuint* params);

GLAPI PFNGLTEXPARAMETERIUIVPROC gl_tex_parameter_iuiv;

typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC)(GLenum target,
                                                     GLenum pname,
                                                     GLint* params);

GLAPI PFNGLGETTEXPARAMETERIIVPROC gl_get_tex_parameter_iiv;

typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target,
                                                      GLenum pname,
                                                      GLuint* params);

GLAPI PFNGLGETTEXPARAMETERIUIVPROC gl_get_tex_parameter_iuiv;

typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer,
                                                const GLint* value);

GLAPI PFNGLCLEARBUFFERIVPROC gl_clear_bufferiv;

typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC)(GLenum buffer,
                                                 GLint drawbuffer,
                                                 const GLuint* value);

GLAPI PFNGLCLEARBUFFERUIVPROC gl_clear_bufferuiv;

typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer,
                                                const GLfloat* value);

GLAPI PFNGLCLEARBUFFERFVPROC gl_clear_bufferfv;

typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer,
                                                GLfloat depth, GLint stencil);

GLAPI PFNGLCLEARBUFFERFIPROC gl_clear_bufferfi;

typedef const GLubyte* (APIENTRYP PFNGLGETSTRINGIPROC)(GLenum name,
                                                       GLuint index);

GLAPI PFNGLGETSTRINGIPROC gl_get_stringi;

typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);

GLAPI PFNGLISRENDERBUFFERPROC gl_is_renderbuffer;

typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC)(GLenum target,
                                                   GLuint renderbuffer);

GLAPI PFNGLBINDRENDERBUFFERPROC gl_bind_renderbuffer;

typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC)(GLsizei n,
                                                      const GLuint* renderbuffers);

GLAPI PFNGLDELETERENDERBUFFERSPROC gl_delete_renderbuffers;

typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC)(GLsizei n,
                                                   GLuint* renderbuffers);

GLAPI PFNGLGENRENDERBUFFERSPROC gl_gen_renderbuffers;

typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target,
                                                      GLenum internalformat,
                                                      GLsizei width,
                                                      GLsizei height);

GLAPI PFNGLRENDERBUFFERSTORAGEPROC gl_renderbuffer_storage;

typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target,
                                                             GLenum pname,
                                                             GLint* params);

GLAPI PFNGLGETRENDERBUFFERPARAMETERIVPROC gl_get_renderbuffer_parameteriv;

typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);

GLAPI PFNGLISFRAMEBUFFERPROC gl_is_framebuffer;

typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC)(GLenum target,
                                                  GLuint framebuffer);

GLAPI PFNGLBINDFRAMEBUFFERPROC gl_bind_framebuffer;

typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n,
                                                     const GLuint* framebuffers);

GLAPI PFNGLDELETEFRAMEBUFFERSPROC gl_delete_framebuffers;

typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC)(GLsizei n,
                                                  GLuint* framebuffers);

GLAPI PFNGLGENFRAMEBUFFERSPROC gl_gen_framebuffers;

typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);

GLAPI PFNGLCHECKFRAMEBUFFERSTATUSPROC gl_check_framebuffer_status;

typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target,
                                                       GLenum attachment,
                                                       GLenum textarget,
                                                       GLuint texture,
                                                       GLint level);

GLAPI PFNGLFRAMEBUFFERTEXTURE1DPROC gl_framebuffer_texture_1d;

typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target,
                                                       GLenum attachment,
                                                       GLenum textarget,
                                                       GLuint texture,
                                                       GLint level);

GLAPI PFNGLFRAMEBUFFERTEXTURE2DPROC gl_framebuffer_texture_2d;

typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target,
                                                       GLenum attachment,
                                                       GLenum textarget,
                                                       GLuint texture,
                                                       GLint level,
                                                       GLint zoffset);

GLAPI PFNGLFRAMEBUFFERTEXTURE3DPROC gl_framebuffer_texture_3d;

typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target,
                                                          GLenum attachment,
                                                          GLenum renderbuffertarget,
                                                          GLuint renderbuffer);

GLAPI PFNGLFRAMEBUFFERRENDERBUFFERPROC gl_framebuffer_renderbuffer;

typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(
  GLenum target, GLenum attachment, GLenum pname, GLint* params);

GLAPI PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl_get_framebuffer_attachment_parameteriv;

typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC)(GLenum target);

GLAPI PFNGLGENERATEMIPMAPPROC gl_generate_mipmap;

typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0,
                                                  GLint srcX1, GLint srcY1,
                                                  GLint dstX0, GLint dstY0,
                                                  GLint dstX1, GLint dstY1,
                                                  GLbitfield mask,
                                                  GLenum filter);

GLAPI PFNGLBLITFRAMEBUFFERPROC gl_blit_framebuffer;

typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target,
                                                                 GLsizei samples,
                                                                 GLenum internalformat,
                                                                 GLsizei width,
                                                                 GLsizei height);

GLAPI PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gl_renderbuffer_storage_multisample;

typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target,
                                                          GLenum attachment,
                                                          GLuint texture,
                                                          GLint level,
                                                          GLint layer);

GLAPI PFNGLFRAMEBUFFERTEXTURELAYERPROC gl_framebuffer_texture_layer;

typedef void* (APIENTRYP PFNGLMAPBUFFERRANGEPROC)(GLenum target,
                                                  GLintptr offset,
                                                  GLsizeiptr length,
                                                  GLbitfield access);

GLAPI PFNGLMAPBUFFERRANGEPROC gl_map_buffer_range;

typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target,
                                                         GLintptr offset,
                                                         GLsizeiptr length);

GLAPI PFNGLFLUSHMAPPEDBUFFERRANGEPROC gl_flush_mapped_buffer_range;

typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC)(GLuint array);

GLAPI PFNGLBINDVERTEXARRAYPROC gl_bind_vertex_array;

typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n,
                                                     const GLuint* arrays);

GLAPI PFNGLDELETEVERTEXARRAYSPROC gl_delete_vertex_arrays;

typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint* arrays);

GLAPI PFNGLGENVERTEXARRAYSPROC gl_gen_vertex_arrays;

typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC)(GLuint array);

GLAPI PFNGLISVERTEXARRAYPROC gl_is_vertex_array;
#endif
#ifndef GL_VERSION_3_1
#define GL_VERSION_3_1 1
GLAPI int GLAD_GL_VERSION_3_1;

typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first,
                                                      GLsizei count,
                                                      GLsizei instancecount);

GLAPI PFNGLDRAWARRAYSINSTANCEDPROC gl_draw_arrays_instanced;

typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode,
                                                        GLsizei count,
                                                        GLenum type,
                                                        const void* indices,
                                                        GLsizei instancecount);

GLAPI PFNGLDRAWELEMENTSINSTANCEDPROC gl_draw_elements_instanced;

typedef void (APIENTRYP PFNGLTEXBUFFERPROC)(GLenum target,
                                            GLenum internalformat,
                                            GLuint buffer);

GLAPI PFNGLTEXBUFFERPROC gl_tex_buffer;

typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);

GLAPI PFNGLPRIMITIVERESTARTINDEXPROC gl_primitive_restart_index;

typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget,
                                                    GLenum writeTarget,
                                                    GLintptr readOffset,
                                                    GLintptr writeOffset,
                                                    GLsizeiptr size);

GLAPI PFNGLCOPYBUFFERSUBDATAPROC gl_copy_buffer_sub_data;

typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC)(GLuint program,
                                                    GLsizei uniformCount,
                                                    const GLchar* const* uniformNames,
                                                    GLuint* uniformIndices);

GLAPI PFNGLGETUNIFORMINDICESPROC gl_get_uniform_indices;

typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program,
                                                      GLsizei uniformCount,
                                                      const GLuint* uniformIndices,
                                                      GLenum pname,
                                                      GLint* params);

GLAPI PFNGLGETACTIVEUNIFORMSIVPROC gl_get_active_uniformsiv;

typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program,
                                                       GLuint uniformIndex,
                                                       GLsizei bufSize,
                                                       GLsizei* length,
                                                       GLchar* uniformName);

GLAPI PFNGLGETACTIVEUNIFORMNAMEPROC gl_get_active_uniform_name;

typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program,
                                                         const GLchar* uniformBlockName);

GLAPI PFNGLGETUNIFORMBLOCKINDEXPROC gl_get_uniform_block_index;

typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program,
                                                          GLuint uniformBlockIndex,
                                                          GLenum pname,
                                                          GLint* params);

GLAPI PFNGLGETACTIVEUNIFORMBLOCKIVPROC gl_get_active_uniform_blockiv;

typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program,
                                                            GLuint uniformBlockIndex,
                                                            GLsizei bufSize,
                                                            GLsizei* length,
                                                            GLchar* uniformBlockName);

GLAPI PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gl_get_active_uniform_block_name;

typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program,
                                                      GLuint uniformBlockIndex,
                                                      GLuint uniformBlockBinding);

GLAPI PFNGLUNIFORMBLOCKBINDINGPROC gl_uniform_block_binding;
#endif
#ifndef GL_VERSION_3_2
#define GL_VERSION_3_2 1
GLAPI int GLAD_GL_VERSION_3_2;

typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode,
                                                         GLsizei count,
                                                         GLenum type,
                                                         const void* indices,
                                                         GLint basevertex);

GLAPI PFNGLDRAWELEMENTSBASEVERTEXPROC gl_draw_elements_base_vertex;

typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode,
                                                              GLuint start,
                                                              GLuint end,
                                                              GLsizei count,
                                                              GLenum type,
                                                              const void* indices,
                                                              GLint basevertex);

GLAPI PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gl_draw_range_elements_base_vertex;

typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode,
                                                                  GLsizei count,
                                                                  GLenum type,
                                                                  const void* indices,
                                                                  GLsizei instancecount,
                                                                  GLint basevertex);

GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gl_draw_elements_instanced_base_vertex;

typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode,
                                                              const GLsizei* count,
                                                              GLenum type,
                                                              const void* const* indices,
                                                              GLsizei drawcount,
                                                              const GLint* basevertex);

GLAPI PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gl_multi_draw_elements_base_vertex;

typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC)(GLenum mode);

GLAPI PFNGLPROVOKINGVERTEXPROC gl_provoking_vertex;

typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC)(GLenum condition,
                                              GLbitfield flags);

GLAPI PFNGLFENCESYNCPROC gl_fence_sync;

typedef GLboolean (APIENTRYP PFNGLISSYNCPROC)(GLsync sync);

GLAPI PFNGLISSYNCPROC gl_is_sync;

typedef void (APIENTRYP PFNGLDELETESYNCPROC)(GLsync sync);

GLAPI PFNGLDELETESYNCPROC gl_delete_sync;

typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC)(GLsync sync,
                                                   GLbitfield flags,
                                                   GLuint64 timeout);

GLAPI PFNGLCLIENTWAITSYNCPROC gl_client_wait_sync;

typedef void (APIENTRYP PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags,
                                           GLuint64 timeout);

GLAPI PFNGLWAITSYNCPROC gl_wait_sync;

typedef void (APIENTRYP PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64* data);

GLAPI PFNGLGETINTEGER64VPROC gl_get_integer_64v;

typedef void (APIENTRYP PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname,
                                            GLsizei count, GLsizei* length,
                                            GLint* values);

GLAPI PFNGLGETSYNCIVPROC gl_get_synciv;

typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index,
                                                  GLint64* data);

GLAPI PFNGLGETINTEGER64I_VPROC gl_get_integer_64i_v;

typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target,
                                                         GLenum pname,
                                                         GLint64* params);

GLAPI PFNGLGETBUFFERPARAMETERI64VPROC gl_get_buffer_parameteri_64v;

typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target,
                                                     GLenum attachment,
                                                     GLuint texture,
                                                     GLint level);

GLAPI PFNGLFRAMEBUFFERTEXTUREPROC gl_framebuffer_texture;

typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target,
                                                        GLsizei samples,
                                                        GLenum internalformat,
                                                        GLsizei width,
                                                        GLsizei height,
                                                        GLboolean fixedsamplelocations);

GLAPI PFNGLTEXIMAGE2DMULTISAMPLEPROC gl_tex_image_2d_multisample;

typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target,
                                                        GLsizei samples,
                                                        GLenum internalformat,
                                                        GLsizei width,
                                                        GLsizei height,
                                                        GLsizei depth,
                                                        GLboolean fixedsamplelocations);

GLAPI PFNGLTEXIMAGE3DMULTISAMPLEPROC gl_tex_image_3d_multisample;

typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index,
                                                   GLfloat* val);

GLAPI PFNGLGETMULTISAMPLEFVPROC gl_get_multisamplefv;

typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC)(GLuint maskNumber,
                                              GLbitfield mask);

GLAPI PFNGLSAMPLEMASKIPROC gl_sample_maski;
#endif
#ifndef GL_VERSION_3_3
#define GL_VERSION_3_3 1
GLAPI int GLAD_GL_VERSION_3_3;

typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program,
                                                              GLuint colorNumber,
                                                              GLuint index,
                                                              const GLchar* name);

GLAPI PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gl_bind_frag_data_location_indexed;

typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC)(GLuint program,
                                                    const GLchar* name);

GLAPI PFNGLGETFRAGDATAINDEXPROC gl_get_frag_data_index;

typedef void (APIENTRYP PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint* samplers);

GLAPI PFNGLGENSAMPLERSPROC gl_gen_samplers;

typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC)(GLsizei count,
                                                 const GLuint* samplers);

GLAPI PFNGLDELETESAMPLERSPROC gl_delete_samplers;

typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC)(GLuint sampler);

GLAPI PFNGLISSAMPLERPROC gl_is_sampler;

typedef void (APIENTRYP PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);

GLAPI PFNGLBINDSAMPLERPROC gl_bind_sampler;

typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler,
                                                    GLenum pname, GLint param);

GLAPI PFNGLSAMPLERPARAMETERIPROC gl_sampler_parameteri;

typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler,
                                                     GLenum pname,
                                                     const GLint* param);

GLAPI PFNGLSAMPLERPARAMETERIVPROC gl_sampler_parameteriv;

typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler,
                                                    GLenum pname,
                                                    GLfloat param);

GLAPI PFNGLSAMPLERPARAMETERFPROC gl_sampler_parameterf;

typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler,
                                                     GLenum pname,
                                                     const GLfloat* param);

GLAPI PFNGLSAMPLERPARAMETERFVPROC gl_sampler_parameterfv;

typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler,
                                                      GLenum pname,
                                                      const GLint* param);

GLAPI PFNGLSAMPLERPARAMETERIIVPROC gl_sampler_parameter_iiv;

typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler,
                                                       GLenum pname,
                                                       const GLuint* param);

GLAPI PFNGLSAMPLERPARAMETERIUIVPROC gl_sampler_parameter_iuiv;

typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler,
                                                        GLenum pname,
                                                        GLint* params);

GLAPI PFNGLGETSAMPLERPARAMETERIVPROC gl_get_sampler_parameteriv;

typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler,
                                                         GLenum pname,
                                                         GLint* params);

GLAPI PFNGLGETSAMPLERPARAMETERIIVPROC gl_get_sampler_parameter_iiv;

typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler,
                                                        GLenum pname,
                                                        GLfloat* params);

GLAPI PFNGLGETSAMPLERPARAMETERFVPROC gl_get_sampler_parameterfv;

typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler,
                                                          GLenum pname,
                                                          GLuint* params);

GLAPI PFNGLGETSAMPLERPARAMETERIUIVPROC gl_get_sampler_parameter_iuiv;

typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);

GLAPI PFNGLQUERYCOUNTERPROC gl_query_counter;

typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname,
                                                     GLint64* params);

GLAPI PFNGLGETQUERYOBJECTI64VPROC gl_get_query_objecti_64v;

typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname,
                                                      GLuint64* params);

GLAPI PFNGLGETQUERYOBJECTUI64VPROC gl_get_query_objectui_64v;

typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index,
                                                      GLuint divisor);

GLAPI PFNGLVERTEXATTRIBDIVISORPROC gl_vertex_attrib_divisor;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type,
                                                   GLboolean normalized,
                                                   GLuint value);

GLAPI PFNGLVERTEXATTRIBP1UIPROC gl_vertex_attrib_p_1ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type,
                                                    GLboolean normalized,
                                                    const GLuint* value);

GLAPI PFNGLVERTEXATTRIBP1UIVPROC gl_vertex_attrib_p_1uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type,
                                                   GLboolean normalized,
                                                   GLuint value);

GLAPI PFNGLVERTEXATTRIBP2UIPROC gl_vertex_attrib_p_2ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type,
                                                    GLboolean normalized,
                                                    const GLuint* value);

GLAPI PFNGLVERTEXATTRIBP2UIVPROC gl_vertex_attrib_p_2uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type,
                                                   GLboolean normalized,
                                                   GLuint value);

GLAPI PFNGLVERTEXATTRIBP3UIPROC gl_vertex_attrib_p_3ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type,
                                                    GLboolean normalized,
                                                    const GLuint* value);

GLAPI PFNGLVERTEXATTRIBP3UIVPROC gl_vertex_attrib_p_3uiv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type,
                                                   GLboolean normalized,
                                                   GLuint value);

GLAPI PFNGLVERTEXATTRIBP4UIPROC gl_vertex_attrib_p_4ui;

typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type,
                                                    GLboolean normalized,
                                                    const GLuint* value);

GLAPI PFNGLVERTEXATTRIBP4UIVPROC gl_vertex_attrib_p_4uiv;

typedef void (APIENTRYP PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);

GLAPI PFNGLVERTEXP2UIPROC gl_vertex_p_2ui;

typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint* value);

GLAPI PFNGLVERTEXP2UIVPROC gl_vertex_p_2uiv;

typedef void (APIENTRYP PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);

GLAPI PFNGLVERTEXP3UIPROC gl_vertex_p_3ui;

typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint* value);

GLAPI PFNGLVERTEXP3UIVPROC gl_vertex_p_3uiv;

typedef void (APIENTRYP PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);

GLAPI PFNGLVERTEXP4UIPROC gl_vertex_p_4ui;

typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint* value);

GLAPI PFNGLVERTEXP4UIVPROC gl_vertex_p_4uiv;

typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);

GLAPI PFNGLTEXCOORDP1UIPROC gl_tex_coord_p_1ui;

typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC)(GLenum type,
                                                const GLuint* coords);

GLAPI PFNGLTEXCOORDP1UIVPROC gl_tex_coord_p_1uiv;

typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);

GLAPI PFNGLTEXCOORDP2UIPROC gl_tex_coord_p_2ui;

typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC)(GLenum type,
                                                const GLuint* coords);

GLAPI PFNGLTEXCOORDP2UIVPROC gl_tex_coord_p_2uiv;

typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);

GLAPI PFNGLTEXCOORDP3UIPROC gl_tex_coord_p_3ui;

typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC)(GLenum type,
                                                const GLuint* coords);

GLAPI PFNGLTEXCOORDP3UIVPROC gl_tex_coord_p_3uiv;

typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);

GLAPI PFNGLTEXCOORDP4UIPROC gl_tex_coord_p_4ui;

typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC)(GLenum type,
                                                const GLuint* coords);

GLAPI PFNGLTEXCOORDP4UIVPROC gl_tex_coord_p_4uiv;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type,
                                                    GLuint coords);

GLAPI PFNGLMULTITEXCOORDP1UIPROC gl_multi_tex_coord_p_1ui;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture,
                                                     GLenum type,
                                                     const GLuint* coords);

GLAPI PFNGLMULTITEXCOORDP1UIVPROC gl_multi_tex_coord_p_1uiv;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type,
                                                    GLuint coords);

GLAPI PFNGLMULTITEXCOORDP2UIPROC gl_multi_tex_coord_p_2ui;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture,
                                                     GLenum type,
                                                     const GLuint* coords);

GLAPI PFNGLMULTITEXCOORDP2UIVPROC gl_multi_tex_coord_p_2uiv;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type,
                                                    GLuint coords);

GLAPI PFNGLMULTITEXCOORDP3UIPROC gl_multi_tex_coord_p_3ui;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture,
                                                     GLenum type,
                                                     const GLuint* coords);

GLAPI PFNGLMULTITEXCOORDP3UIVPROC gl_multi_tex_coord_p_3uiv;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type,
                                                    GLuint coords);

GLAPI PFNGLMULTITEXCOORDP4UIPROC gl_multi_tex_coord_p_4ui;

typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture,
                                                     GLenum type,
                                                     const GLuint* coords);

GLAPI PFNGLMULTITEXCOORDP4UIVPROC gl_multi_tex_coord_p_4uiv;

typedef void (APIENTRYP PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);

GLAPI PFNGLNORMALP3UIPROC gl_normal_p_3ui;

typedef void (APIENTRYP PFNGLNORMALP3UIVPROC)(GLenum type,
                                              const GLuint* coords);

GLAPI PFNGLNORMALP3UIVPROC gl_normal_p_3uiv;

typedef void (APIENTRYP PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);

GLAPI PFNGLCOLORP3UIPROC gl_color_p_3ui;

typedef void (APIENTRYP PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint* color);

GLAPI PFNGLCOLORP3UIVPROC gl_color_p_3uiv;

typedef void (APIENTRYP PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);

GLAPI PFNGLCOLORP4UIPROC gl_color_p_4ui;

typedef void (APIENTRYP PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint* color);

GLAPI PFNGLCOLORP4UIVPROC gl_color_p_4uiv;

typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);

GLAPI PFNGLSECONDARYCOLORP3UIPROC gl_secondary_color_p_3ui;

typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type,
                                                      const GLuint* color);

GLAPI PFNGLSECONDARYCOLORP3UIVPROC gl_secondary_color_p_3uiv;
#endif
#ifndef GL_VERSION_4_0
#define GL_VERSION_4_0 1
GLAPI int GLAD_GL_VERSION_4_0;

typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC)(GLfloat value);

GLAPI PFNGLMINSAMPLESHADINGPROC gl_min_sample_shading;

typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);

GLAPI PFNGLBLENDEQUATIONIPROC gl_blend_equationi;

typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf,
                                                         GLenum modeRGB,
                                                         GLenum modeAlpha);

GLAPI PFNGLBLENDEQUATIONSEPARATEIPROC gl_blend_equation_separatei;

typedef void (APIENTRYP PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src,
                                             GLenum dst);

GLAPI PFNGLBLENDFUNCIPROC gl_blend_funci;

typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB,
                                                     GLenum dstRGB,
                                                     GLenum srcAlpha,
                                                     GLenum dstAlpha);

GLAPI PFNGLBLENDFUNCSEPARATEIPROC gl_blend_func_separatei;

typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode,
                                                     const void* indirect);

GLAPI PFNGLDRAWARRAYSINDIRECTPROC gl_draw_arrays_indirect;

typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type,
                                                       const void* indirect);

GLAPI PFNGLDRAWELEMENTSINDIRECTPROC gl_draw_elements_indirect;

typedef void (APIENTRYP PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);

GLAPI PFNGLUNIFORM1DPROC gl_uniform_1d;

typedef void (APIENTRYP PFNGLUNIFORM2DPROC)(GLint location, GLdouble x,
                                            GLdouble y);

GLAPI PFNGLUNIFORM2DPROC gl_uniform_2d;

typedef void (APIENTRYP PFNGLUNIFORM3DPROC)(GLint location, GLdouble x,
                                            GLdouble y, GLdouble z);

GLAPI PFNGLUNIFORM3DPROC gl_uniform_3d;

typedef void (APIENTRYP PFNGLUNIFORM4DPROC)(GLint location, GLdouble x,
                                            GLdouble y, GLdouble z, GLdouble w);

GLAPI PFNGLUNIFORM4DPROC gl_uniform_4d;

typedef void (APIENTRYP PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count,
                                             const GLdouble* value);

GLAPI PFNGLUNIFORM1DVPROC gl_uniform_1dv;

typedef void (APIENTRYP PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count,
                                             const GLdouble* value);

GLAPI PFNGLUNIFORM2DVPROC gl_uniform_2dv;

typedef void (APIENTRYP PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count,
                                             const GLdouble* value);

GLAPI PFNGLUNIFORM3DVPROC gl_uniform_3dv;

typedef void (APIENTRYP PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count,
                                             const GLdouble* value);

GLAPI PFNGLUNIFORM4DVPROC gl_uniform_4dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC)(GLint location,
                                                   GLsizei count,
                                                   GLboolean transpose,
                                                   const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX2DVPROC gl_uniform_matrix2dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC)(GLint location,
                                                   GLsizei count,
                                                   GLboolean transpose,
                                                   const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX3DVPROC gl_uniform_matrix3dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC)(GLint location,
                                                   GLsizei count,
                                                   GLboolean transpose,
                                                   const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX4DVPROC gl_uniform_matrix_4dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX2X3DVPROC gl_uniform_matrix2x3dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX2X4DVPROC gl_uniform_matrix2x4dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX3X2DVPROC gl_uniform_matrix3x2dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX3X4DVPROC gl_uniform_matrix3x4dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX4X2DVPROC gl_uniform_matrix_4x2dv;

typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location,
                                                     GLsizei count,
                                                     GLboolean transpose,
                                                     const GLdouble* value);

GLAPI PFNGLUNIFORMMATRIX4X3DVPROC gl_uniform_matrix_4x3dv;

typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location,
                                               GLdouble* params);

GLAPI PFNGLGETUNIFORMDVPROC gl_get_uniformdv;

typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program,
                                                                GLenum shadertype,
                                                                const GLchar* name);

GLAPI PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gl_get_subroutine_uniform_location;

typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC)(GLuint program,
                                                       GLenum shadertype,
                                                       const GLchar* name);

GLAPI PFNGLGETSUBROUTINEINDEXPROC gl_get_subroutine_index;

typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program,
                                                               GLenum shadertype,
                                                               GLuint index,
                                                               GLenum pname,
                                                               GLint* values);

GLAPI PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gl_get_active_subroutine_uniformiv;

typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program,
                                                                 GLenum shadertype,
                                                                 GLuint index,
                                                                 GLsizei bufSize,
                                                                 GLsizei* length,
                                                                 GLchar* name);

GLAPI PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gl_get_active_subroutine_uniform_name;

typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program,
                                                          GLenum shadertype,
                                                          GLuint index,
                                                          GLsizei bufSize,
                                                          GLsizei* length,
                                                          GLchar* name);

GLAPI PFNGLGETACTIVESUBROUTINENAMEPROC gl_get_active_subroutine_name;

typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype,
                                                        GLsizei count,
                                                        const GLuint* indices);

GLAPI PFNGLUNIFORMSUBROUTINESUIVPROC gl_uniform_subroutinesuiv;

typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype,
                                                          GLint location,
                                                          GLuint* params);

GLAPI PFNGLGETUNIFORMSUBROUTINEUIVPROC gl_get_uniform_subroutineuiv;

typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program,
                                                    GLenum shadertype,
                                                    GLenum pname,
                                                    GLint* values);

GLAPI PFNGLGETPROGRAMSTAGEIVPROC gl_get_program_stageiv;

typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);

GLAPI PFNGLPATCHPARAMETERIPROC gl_patch_parameteri;

typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC)(GLenum pname,
                                                   const GLfloat* values);

GLAPI PFNGLPATCHPARAMETERFVPROC gl_patch_parameterfv;

typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target,
                                                        GLuint id);

GLAPI PFNGLBINDTRANSFORMFEEDBACKPROC gl_bind_transform_feedback;

typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n,
                                                           const GLuint* ids);

GLAPI PFNGLDELETETRANSFORMFEEDBACKSPROC gl_delete_transform_feedbacks;

typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint* ids);

GLAPI PFNGLGENTRANSFORMFEEDBACKSPROC gl_gen_transform_feedbacks;

typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);

GLAPI PFNGLISTRANSFORMFEEDBACKPROC gl_is_transform_feedback;

typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);

GLAPI PFNGLPAUSETRANSFORMFEEDBACKPROC gl_pause_transform_feedback;

typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);

GLAPI PFNGLRESUMETRANSFORMFEEDBACKPROC gl_resume_transform_feedback;

typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);

GLAPI PFNGLDRAWTRANSFORMFEEDBACKPROC gl_draw_transform_feedback;

typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode,
                                                              GLuint id,
                                                              GLuint stream);

GLAPI PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gl_draw_transform_feedback_stream;

typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index,
                                                    GLuint id);

GLAPI PFNGLBEGINQUERYINDEXEDPROC gl_begin_query_indexed;

typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);

GLAPI PFNGLENDQUERYINDEXEDPROC gl_end_query_indexed;

typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index,
                                                    GLenum pname,
                                                    GLint* params);

GLAPI PFNGLGETQUERYINDEXEDIVPROC gl_get_query_indexediv;
#endif
#ifndef GL_VERSION_4_1
#define GL_VERSION_4_1 1
GLAPI int GLAD_GL_VERSION_4_1;

typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC)(void);

GLAPI PFNGLRELEASESHADERCOMPILERPROC gl_release_shader_compiler;

typedef void (APIENTRYP PFNGLSHADERBINARYPROC)(GLsizei count,
                                               const GLuint* shaders,
                                               GLenum binaryFormat,
                                               const void* binary,
                                               GLsizei length);

GLAPI PFNGLSHADERBINARYPROC gl_shader_binary;

typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype,
                                                           GLenum precisiontype,
                                                           GLint* range,
                                                           GLint* precision);

GLAPI PFNGLGETSHADERPRECISIONFORMATPROC gl_get_shader_precision_format;

typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);

GLAPI PFNGLDEPTHRANGEFPROC gl_depth_rangef;

typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC)(GLfloat d);

GLAPI PFNGLCLEARDEPTHFPROC gl_clear_depthf;

typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC)(GLuint program,
                                                   GLsizei bufSize,
                                                   GLsizei* length,
                                                   GLenum* binaryFormat,
                                                   void* binary);

GLAPI PFNGLGETPROGRAMBINARYPROC gl_get_program_binary;

typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC)(GLuint program,
                                                GLenum binaryFormat,
                                                const void* binary,
                                                GLsizei length);

GLAPI PFNGLPROGRAMBINARYPROC gl_program_binary;

typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC)(GLuint program,
                                                    GLenum pname, GLint value);

GLAPI PFNGLPROGRAMPARAMETERIPROC gl_program_parameteri;

typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline,
                                                   GLbitfield stages,
                                                   GLuint program);

GLAPI PFNGLUSEPROGRAMSTAGESPROC gl_use_program_stages;

typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline,
                                                      GLuint program);

GLAPI PFNGLACTIVESHADERPROGRAMPROC gl_active_shader_program;

typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC)(GLenum type,
                                                         GLsizei count,
                                                         const GLchar* const* strings);

GLAPI PFNGLCREATESHADERPROGRAMVPROC gl_create_shader_programv;

typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);

GLAPI PFNGLBINDPROGRAMPIPELINEPROC gl_bind_program_pipeline;

typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n,
                                                         const GLuint* pipelines);

GLAPI PFNGLDELETEPROGRAMPIPELINESPROC gl_delete_program_pipelines;

typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n,
                                                      GLuint* pipelines);

GLAPI PFNGLGENPROGRAMPIPELINESPROC gl_gen_program_pipelines;

typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);

GLAPI PFNGLISPROGRAMPIPELINEPROC gl_is_program_pipeline;

typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline,
                                                       GLenum pname,
                                                       GLint* params);

GLAPI PFNGLGETPROGRAMPIPELINEIVPROC gl_get_program_pipelineiv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC)(GLuint program,
                                                   GLint location, GLint v0);

GLAPI PFNGLPROGRAMUNIFORM1IPROC gl_program_uniform_1i;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLint* value);

GLAPI PFNGLPROGRAMUNIFORM1IVPROC gl_program_uniform_1iv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC)(GLuint program,
                                                   GLint location, GLfloat v0);

GLAPI PFNGLPROGRAMUNIFORM1FPROC gl_program_uniform_1f;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORM1FVPROC gl_program_uniform_1fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC)(GLuint program,
                                                   GLint location, GLdouble v0);

GLAPI PFNGLPROGRAMUNIFORM1DPROC gl_program_uniform_1d;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORM1DVPROC gl_program_uniform_1dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program,
                                                    GLint location, GLuint v0);

GLAPI PFNGLPROGRAMUNIFORM1UIPROC gl_program_uniform_1ui;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program,
                                                     GLint location,
                                                     GLsizei count,
                                                     const GLuint* value);

GLAPI PFNGLPROGRAMUNIFORM1UIVPROC gl_program_uniform_1uiv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC)(GLuint program,
                                                   GLint location, GLint v0,
                                                   GLint v1);

GLAPI PFNGLPROGRAMUNIFORM2IPROC gl_program_uniform_2i;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLint* value);

GLAPI PFNGLPROGRAMUNIFORM2IVPROC gl_program_uniform_2iv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC)(GLuint program,
                                                   GLint location, GLfloat v0,
                                                   GLfloat v1);

GLAPI PFNGLPROGRAMUNIFORM2FPROC gl_program_uniform_2f;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORM2FVPROC gl_program_uniform_2fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC)(GLuint program,
                                                   GLint location, GLdouble v0,
                                                   GLdouble v1);

GLAPI PFNGLPROGRAMUNIFORM2DPROC gl_program_uniform_2d;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORM2DVPROC gl_program_uniform_2dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program,
                                                    GLint location, GLuint v0,
                                                    GLuint v1);

GLAPI PFNGLPROGRAMUNIFORM2UIPROC gl_program_uniform_2ui;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program,
                                                     GLint location,
                                                     GLsizei count,
                                                     const GLuint* value);

GLAPI PFNGLPROGRAMUNIFORM2UIVPROC gl_program_uniform_2uiv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC)(GLuint program,
                                                   GLint location, GLint v0,
                                                   GLint v1, GLint v2);

GLAPI PFNGLPROGRAMUNIFORM3IPROC gl_program_uniform_3i;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLint* value);

GLAPI PFNGLPROGRAMUNIFORM3IVPROC gl_program_uniform_3iv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC)(GLuint program,
                                                   GLint location, GLfloat v0,
                                                   GLfloat v1, GLfloat v2);

GLAPI PFNGLPROGRAMUNIFORM3FPROC gl_program_uniform_3f;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORM3FVPROC gl_program_uniform_3fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC)(GLuint program,
                                                   GLint location, GLdouble v0,
                                                   GLdouble v1, GLdouble v2);

GLAPI PFNGLPROGRAMUNIFORM3DPROC gl_program_uniform_3d;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORM3DVPROC gl_program_uniform_3dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program,
                                                    GLint location, GLuint v0,
                                                    GLuint v1, GLuint v2);

GLAPI PFNGLPROGRAMUNIFORM3UIPROC gl_program_uniform_3ui;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program,
                                                     GLint location,
                                                     GLsizei count,
                                                     const GLuint* value);

GLAPI PFNGLPROGRAMUNIFORM3UIVPROC gl_program_uniform_3uiv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC)(GLuint program,
                                                   GLint location, GLint v0,
                                                   GLint v1, GLint v2,
                                                   GLint v3);

GLAPI PFNGLPROGRAMUNIFORM4IPROC gl_program_uniform_4i;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLint* value);

GLAPI PFNGLPROGRAMUNIFORM4IVPROC gl_program_uniform_4iv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC)(GLuint program,
                                                   GLint location, GLfloat v0,
                                                   GLfloat v1, GLfloat v2,
                                                   GLfloat v3);

GLAPI PFNGLPROGRAMUNIFORM4FPROC gl_program_uniform_4f;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORM4FVPROC gl_program_uniform_4fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC)(GLuint program,
                                                   GLint location, GLdouble v0,
                                                   GLdouble v1, GLdouble v2,
                                                   GLdouble v3);

GLAPI PFNGLPROGRAMUNIFORM4DPROC gl_program_uniform_4d;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program,
                                                    GLint location,
                                                    GLsizei count,
                                                    const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORM4DVPROC gl_program_uniform_4dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program,
                                                    GLint location, GLuint v0,
                                                    GLuint v1, GLuint v2,
                                                    GLuint v3);

GLAPI PFNGLPROGRAMUNIFORM4UIPROC gl_program_uniform_4ui;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program,
                                                     GLint location,
                                                     GLsizei count,
                                                     const GLuint* value);

GLAPI PFNGLPROGRAMUNIFORM4UIVPROC gl_program_uniform_4uiv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX2FVPROC gl_program_uniform_matrix2fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX3FVPROC gl_program_uniform_matrix3fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX4FVPROC gl_program_uniform_matrix_4fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX2DVPROC gl_program_uniform_matrix2dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX3DVPROC gl_program_uniform_matrix3dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX4DVPROC gl_program_uniform_matrix_4dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gl_program_uniform_matrix2x3fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gl_program_uniform_matrix3x2fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gl_program_uniform_matrix2x4fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gl_program_uniform_matrix_4x2fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gl_program_uniform_matrix3x4fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLfloat* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gl_program_uniform_matrix_4x3fv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gl_program_uniform_matrix2x3dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gl_program_uniform_matrix3x2dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gl_program_uniform_matrix2x4dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gl_program_uniform_matrix_4x2dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gl_program_uniform_matrix3x4dv;

typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program,
                                                            GLint location,
                                                            GLsizei count,
                                                            GLboolean transpose,
                                                            const GLdouble* value);

GLAPI PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gl_program_uniform_matrix_4x3dv;

typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);

GLAPI PFNGLVALIDATEPROGRAMPIPELINEPROC gl_validate_program_pipeline;

typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline,
                                                            GLsizei bufSize,
                                                            GLsizei* length,
                                                            GLchar* infoLog);

GLAPI PFNGLGETPROGRAMPIPELINEINFOLOGPROC gl_get_program_pipeline_info_log;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);

GLAPI PFNGLVERTEXATTRIBL1DPROC gl_vertex_attrib_l_1d;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x,
                                                  GLdouble y);

GLAPI PFNGLVERTEXATTRIBL2DPROC gl_vertex_attrib_l_2d;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x,
                                                  GLdouble y, GLdouble z);

GLAPI PFNGLVERTEXATTRIBL3DPROC gl_vertex_attrib_l_3d;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x,
                                                  GLdouble y, GLdouble z,
                                                  GLdouble w);

GLAPI PFNGLVERTEXATTRIBL4DPROC gl_vertex_attrib_l_4d;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC)(GLuint index,
                                                   const GLdouble* v);

GLAPI PFNGLVERTEXATTRIBL1DVPROC gl_vertex_attrib_l_1dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC)(GLuint index,
                                                   const GLdouble* v);

GLAPI PFNGLVERTEXATTRIBL2DVPROC gl_vertex_attrib_l_2dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC)(GLuint index,
                                                   const GLdouble* v);

GLAPI PFNGLVERTEXATTRIBL3DVPROC gl_vertex_attrib_l_3dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC)(GLuint index,
                                                   const GLdouble* v);

GLAPI PFNGLVERTEXATTRIBL4DVPROC gl_vertex_attrib_l_4dv;

typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size,
                                                       GLenum type,
                                                       GLsizei stride,
                                                       const void* pointer);

GLAPI PFNGLVERTEXATTRIBLPOINTERPROC gl_vertex_attrib_l_pointer;

typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname,
                                                     GLdouble* params);

GLAPI PFNGLGETVERTEXATTRIBLDVPROC gl_get_vertex_attrib_ldv;

typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count,
                                                 const GLfloat* v);

GLAPI PFNGLVIEWPORTARRAYVPROC gl_viewport_arrayv;

typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x,
                                                   GLfloat y, GLfloat w,
                                                   GLfloat h);

GLAPI PFNGLVIEWPORTINDEXEDFPROC gl_viewport_indexedf;

typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index,
                                                    const GLfloat* v);

GLAPI PFNGLVIEWPORTINDEXEDFVPROC gl_viewport_indexedfv;

typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count,
                                                const GLint* v);

GLAPI PFNGLSCISSORARRAYVPROC gl_scissor_arrayv;

typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left,
                                                 GLint bottom, GLsizei width,
                                                 GLsizei height);

GLAPI PFNGLSCISSORINDEXEDPROC gl_scissor_indexed;

typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint* v);

GLAPI PFNGLSCISSORINDEXEDVPROC gl_scissor_indexedv;

typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count,
                                                   const GLdouble* v);

GLAPI PFNGLDEPTHRANGEARRAYVPROC gl_depth_range_arrayv;

typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n,
                                                    GLdouble f);

GLAPI PFNGLDEPTHRANGEINDEXEDPROC gl_depth_range_indexed;

typedef void (APIENTRYP PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index,
                                              GLfloat* data);

GLAPI PFNGLGETFLOATI_VPROC gl_get_floati_v;

typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index,
                                               GLdouble* data);

GLAPI PFNGLGETDOUBLEI_VPROC gl_get_doublei_v;
#endif
#ifndef GL_VERSION_4_2
#define GL_VERSION_4_2 1
GLAPI int GLAD_GL_VERSION_4_2;

typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode,
                                                                  GLint first,
                                                                  GLsizei count,
                                                                  GLsizei instancecount,
                                                                  GLuint baseinstance);

GLAPI PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gl_draw_arrays_instanced_base_instance;

typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode,
                                                                    GLsizei count,
                                                                    GLenum type,
                                                                    const void* indices,
                                                                    GLsizei instancecount,
                                                                    GLuint baseinstance);

GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gl_draw_elements_instanced_base_instance;

typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(
  GLenum mode, GLsizei count, GLenum type, const void* indices,
  GLsizei instancecount, GLint basevertex, GLuint baseinstance);

GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl_draw_elements_instanced_base_vertex_base_instance;

typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC)(GLenum target,
                                                      GLenum internalformat,
                                                      GLenum pname,
                                                      GLsizei count,
                                                      GLint* params);

GLAPI PFNGLGETINTERNALFORMATIVPROC gl_get_internalformativ;

typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program,
                                                                 GLuint bufferIndex,
                                                                 GLenum pname,
                                                                 GLint* params);

GLAPI PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gl_get_active_atomic_counter_bufferiv;

typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture,
                                                   GLint level,
                                                   GLboolean layered,
                                                   GLint layer, GLenum access,
                                                   GLenum format);

GLAPI PFNGLBINDIMAGETEXTUREPROC gl_bind_image_texture;

typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);

GLAPI PFNGLMEMORYBARRIERPROC gl_memory_barrier;

typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels,
                                               GLenum internalformat,
                                               GLsizei width);

GLAPI PFNGLTEXSTORAGE1DPROC gl_tex_storage_1d;

typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels,
                                               GLenum internalformat,
                                               GLsizei width, GLsizei height);

GLAPI PFNGLTEXSTORAGE2DPROC gl_tex_storage_2d;

typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels,
                                               GLenum internalformat,
                                               GLsizei width, GLsizei height,
                                               GLsizei depth);

GLAPI PFNGLTEXSTORAGE3DPROC gl_tex_storage_3d;

typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode,
                                                                 GLuint id,
                                                                 GLsizei instancecount);

GLAPI PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gl_draw_transform_feedback_instanced;

typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(
  GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);

GLAPI PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gl_draw_transform_feedback_stream_instanced;
#endif
#ifndef GL_VERSION_4_3
#define GL_VERSION_4_3 1
GLAPI int GLAD_GL_VERSION_4_3;

typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC)(GLenum target,
                                                  GLenum internalformat,
                                                  GLenum format, GLenum type,
                                                  const void* data);

GLAPI PFNGLCLEARBUFFERDATAPROC gl_clear_buffer_data;

typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target,
                                                     GLenum internalformat,
                                                     GLintptr offset,
                                                     GLsizeiptr size,
                                                     GLenum format, GLenum type,
                                                     const void* data);

GLAPI PFNGLCLEARBUFFERSUBDATAPROC gl_clear_buffer_sub_data;

typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x,
                                                  GLuint num_groups_y,
                                                  GLuint num_groups_z);

GLAPI PFNGLDISPATCHCOMPUTEPROC gl_dispatch_compute;

typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);

GLAPI PFNGLDISPATCHCOMPUTEINDIRECTPROC gl_dispatch_compute_indirect;

typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName,
                                                   GLenum srcTarget,
                                                   GLint srcLevel, GLint srcX,
                                                   GLint srcY, GLint srcZ,
                                                   GLuint dstName,
                                                   GLenum dstTarget,
                                                   GLint dstLevel, GLint dstX,
                                                   GLint dstY, GLint dstZ,
                                                   GLsizei srcWidth,
                                                   GLsizei srcHeight,
                                                   GLsizei srcDepth);

GLAPI PFNGLCOPYIMAGESUBDATAPROC gl_copy_image_sub_data;

typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target,
                                                        GLenum pname,
                                                        GLint param);

GLAPI PFNGLFRAMEBUFFERPARAMETERIPROC gl_framebuffer_parameteri;

typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target,
                                                            GLenum pname,
                                                            GLint* params);

GLAPI PFNGLGETFRAMEBUFFERPARAMETERIVPROC gl_get_framebuffer_parameteriv;

typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC)(GLenum target,
                                                        GLenum internalformat,
                                                        GLenum pname,
                                                        GLsizei count,
                                                        GLint64* params);

GLAPI PFNGLGETINTERNALFORMATI64VPROC gl_get_internalformati_64v;

typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture,
                                                        GLint level,
                                                        GLint xoffset,
                                                        GLint yoffset,
                                                        GLint zoffset,
                                                        GLsizei width,
                                                        GLsizei height,
                                                        GLsizei depth);

GLAPI PFNGLINVALIDATETEXSUBIMAGEPROC gl_invalidate_tex_sub_image;

typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture,
                                                     GLint level);

GLAPI PFNGLINVALIDATETEXIMAGEPROC gl_invalidate_tex_image;

typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer,
                                                          GLintptr offset,
                                                          GLsizeiptr length);

GLAPI PFNGLINVALIDATEBUFFERSUBDATAPROC gl_invalidate_buffer_sub_data;

typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);

GLAPI PFNGLINVALIDATEBUFFERDATAPROC gl_invalidate_buffer_data;

typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target,
                                                        GLsizei numAttachments,
                                                        const GLenum* attachments);

GLAPI PFNGLINVALIDATEFRAMEBUFFERPROC gl_invalidate_framebuffer;

typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target,
                                                           GLsizei numAttachments,
                                                           const GLenum* attachments,
                                                           GLint x, GLint y,
                                                           GLsizei width,
                                                           GLsizei height);

GLAPI PFNGLINVALIDATESUBFRAMEBUFFERPROC gl_invalidate_sub_framebuffer;

typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode,
                                                          const void* indirect,
                                                          GLsizei drawcount,
                                                          GLsizei stride);

GLAPI PFNGLMULTIDRAWARRAYSINDIRECTPROC gl_multi_draw_arrays_indirect;

typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode,
                                                            GLenum type,
                                                            const void* indirect,
                                                            GLsizei drawcount,
                                                            GLsizei stride);

GLAPI PFNGLMULTIDRAWELEMENTSINDIRECTPROC gl_multi_draw_elements_indirect;

typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program,
                                                        GLenum programInterface,
                                                        GLenum pname,
                                                        GLint* params);

GLAPI PFNGLGETPROGRAMINTERFACEIVPROC gl_get_program_interfaceiv;

typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program,
                                                            GLenum programInterface,
                                                            const GLchar* name);

GLAPI PFNGLGETPROGRAMRESOURCEINDEXPROC gl_get_program_resource_index;

typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program,
                                                         GLenum programInterface,
                                                         GLuint index,
                                                         GLsizei bufSize,
                                                         GLsizei* length,
                                                         GLchar* name);

GLAPI PFNGLGETPROGRAMRESOURCENAMEPROC gl_get_program_resource_name;

typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program,
                                                       GLenum programInterface,
                                                       GLuint index,
                                                       GLsizei propCount,
                                                       const GLenum* props,
                                                       GLsizei count,
                                                       GLsizei* length,
                                                       GLint* params);

GLAPI PFNGLGETPROGRAMRESOURCEIVPROC gl_get_program_resourceiv;

typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program,
                                                              GLenum programInterface,
                                                              const GLchar* name);

GLAPI PFNGLGETPROGRAMRESOURCELOCATIONPROC gl_get_program_resource_location;

typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(
  GLuint program, GLenum programInterface, const GLchar* name);

GLAPI PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gl_get_program_resource_location_index;

typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program,
                                                            GLuint storageBlockIndex,
                                                            GLuint storageBlockBinding);

GLAPI PFNGLSHADERSTORAGEBLOCKBINDINGPROC gl_shader_storage_block_binding;

typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC)(GLenum target,
                                                 GLenum internalformat,
                                                 GLuint buffer, GLintptr offset,
                                                 GLsizeiptr size);

GLAPI PFNGLTEXBUFFERRANGEPROC gl_tex_buffer_range;

typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target,
                                                          GLsizei samples,
                                                          GLenum internalformat,
                                                          GLsizei width,
                                                          GLsizei height,
                                                          GLboolean fixedsamplelocations);

GLAPI PFNGLTEXSTORAGE2DMULTISAMPLEPROC gl_tex_storage_2d_multisample;

typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target,
                                                          GLsizei samples,
                                                          GLenum internalformat,
                                                          GLsizei width,
                                                          GLsizei height,
                                                          GLsizei depth,
                                                          GLboolean fixedsamplelocations);

GLAPI PFNGLTEXSTORAGE3DMULTISAMPLEPROC gl_tex_storage_3d_multisample;

typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target,
                                              GLuint origtexture,
                                              GLenum internalformat,
                                              GLuint minlevel, GLuint numlevels,
                                              GLuint minlayer,
                                              GLuint numlayers);

GLAPI PFNGLTEXTUREVIEWPROC gl_texture_view;

typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex,
                                                   GLuint buffer,
                                                   GLintptr offset,
                                                   GLsizei stride);

GLAPI PFNGLBINDVERTEXBUFFERPROC gl_bind_vertex_buffer;

typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex,
                                                     GLint size, GLenum type,
                                                     GLboolean normalized,
                                                     GLuint relativeoffset);

GLAPI PFNGLVERTEXATTRIBFORMATPROC gl_vertex_attrib_format;

typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex,
                                                      GLint size, GLenum type,
                                                      GLuint relativeoffset);

GLAPI PFNGLVERTEXATTRIBIFORMATPROC gl_vertex_attrib_i_format;

typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex,
                                                      GLint size, GLenum type,
                                                      GLuint relativeoffset);

GLAPI PFNGLVERTEXATTRIBLFORMATPROC gl_vertex_attrib_l_format;

typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex,
                                                      GLuint bindingindex);

GLAPI PFNGLVERTEXATTRIBBINDINGPROC gl_vertex_attrib_binding;

typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex,
                                                       GLuint divisor);

GLAPI PFNGLVERTEXBINDINGDIVISORPROC gl_vertex_binding_divisor;

typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source,
                                                      GLenum type,
                                                      GLenum severity,
                                                      GLsizei count,
                                                      const GLuint* ids,
                                                      GLboolean enabled);

GLAPI PFNGLDEBUGMESSAGECONTROLPROC gl_debug_message_control;

typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type,
                                                     GLuint id, GLenum severity,
                                                     GLsizei length,
                                                     const GLchar* buf);

GLAPI PFNGLDEBUGMESSAGEINSERTPROC gl_debug_message_insert;

typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback,
                                                       const void* userParam);

GLAPI PFNGLDEBUGMESSAGECALLBACKPROC gl_debug_message_callback;

typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count,
                                                       GLsizei bufSize,
                                                       GLenum* sources,
                                                       GLenum* types,
                                                       GLuint* ids,
                                                       GLenum* severities,
                                                       GLsizei* lengths,
                                                       GLchar* messageLog);

GLAPI PFNGLGETDEBUGMESSAGELOGPROC gl_get_debug_message_log;

typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id,
                                                 GLsizei length,
                                                 const GLchar* message);

GLAPI PFNGLPUSHDEBUGGROUPPROC gl_push_debug_group;

typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC)(void);

GLAPI PFNGLPOPDEBUGGROUPPROC gl_pop_debug_group;

typedef void (APIENTRYP PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name,
                                              GLsizei length,
                                              const GLchar* label);

GLAPI PFNGLOBJECTLABELPROC gl_object_label;

typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name,
                                                 GLsizei bufSize,
                                                 GLsizei* length,
                                                 GLchar* label);

GLAPI PFNGLGETOBJECTLABELPROC gl_get_object_label;

typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC)(const void* ptr,
                                                 GLsizei length,
                                                 const GLchar* label);

GLAPI PFNGLOBJECTPTRLABELPROC gl_object_ptr_label;

typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC)(const void* ptr,
                                                    GLsizei bufSize,
                                                    GLsizei* length,
                                                    GLchar* label);

GLAPI PFNGLGETOBJECTPTRLABELPROC gl_get_object_ptr_label;

typedef void (APIENTRYP PFNGLGETPOINTERVPROC)(GLenum pname, void** params);

GLAPI PFNGLGETPOINTERVPROC gl_get_pointerv;
#endif
#ifndef GL_VERSION_4_4
#define GL_VERSION_4_4 1
GLAPI int GLAD_GL_VERSION_4_4;

typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size,
                                                const void* data,
                                                GLbitfield flags);

GLAPI PFNGLBUFFERSTORAGEPROC gl_buffer_storage;

typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level,
                                                GLenum format, GLenum type,
                                                const void* data);

GLAPI PFNGLCLEARTEXIMAGEPROC gl_clear_tex_image;

typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level,
                                                   GLint xoffset, GLint yoffset,
                                                   GLint zoffset, GLsizei width,
                                                   GLsizei height,
                                                   GLsizei depth, GLenum format,
                                                   GLenum type,
                                                   const void* data);

GLAPI PFNGLCLEARTEXSUBIMAGEPROC gl_clear_tex_sub_image;

typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first,
                                                  GLsizei count,
                                                  const GLuint* buffers);

GLAPI PFNGLBINDBUFFERSBASEPROC gl_bind_buffers_base;

typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first,
                                                   GLsizei count,
                                                   const GLuint* buffers,
                                                   const GLintptr* offsets,
                                                   const GLsizeiptr* sizes);

GLAPI PFNGLBINDBUFFERSRANGEPROC gl_bind_buffers_range;

typedef void (APIENTRYP PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count,
                                               const GLuint* textures);

GLAPI PFNGLBINDTEXTURESPROC gl_bind_textures;

typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count,
                                               const GLuint* samplers);

GLAPI PFNGLBINDSAMPLERSPROC gl_bind_samplers;

typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count,
                                                    const GLuint* textures);

GLAPI PFNGLBINDIMAGETEXTURESPROC gl_bind_image_textures;

typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count,
                                                    const GLuint* buffers,
                                                    const GLintptr* offsets,
                                                    const GLsizei* strides);

GLAPI PFNGLBINDVERTEXBUFFERSPROC gl_bind_vertex_buffers;
#endif
#ifndef GL_VERSION_4_5
#define GL_VERSION_4_5 1
GLAPI int GLAD_GL_VERSION_4_5;

typedef void (APIENTRYP PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);

GLAPI PFNGLCLIPCONTROLPROC gl_clip_control;

typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n,
                                                           GLuint* ids);

GLAPI PFNGLCREATETRANSFORMFEEDBACKSPROC gl_create_transform_feedbacks;

typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb,
                                                              GLuint index,
                                                              GLuint buffer);

GLAPI PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC gl_transform_feedback_buffer_base;

typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb,
                                                               GLuint index,
                                                               GLuint buffer,
                                                               GLintptr offset,
                                                               GLsizeiptr size);

GLAPI PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC gl_transform_feedback_buffer_range;

typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb,
                                                         GLenum pname,
                                                         GLint* param);

GLAPI PFNGLGETTRANSFORMFEEDBACKIVPROC gl_get_transform_feedbackiv;

typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb,
                                                          GLenum pname,
                                                          GLuint index,
                                                          GLint* param);

GLAPI PFNGLGETTRANSFORMFEEDBACKI_VPROC gl_get_transform_feedbacki_v;

typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb,
                                                            GLenum pname,
                                                            GLuint index,
                                                            GLint64* param);

GLAPI PFNGLGETTRANSFORMFEEDBACKI64_VPROC gl_get_transform_feedbacki_64_v;

typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint* buffers);

GLAPI PFNGLCREATEBUFFERSPROC gl_create_buffers;

typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer,
                                                     GLsizeiptr size,
                                                     const void* data,
                                                     GLbitfield flags);

GLAPI PFNGLNAMEDBUFFERSTORAGEPROC gl_named_buffer_storage;

typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer,
                                                  GLsizeiptr size,
                                                  const void* data,
                                                  GLenum usage);

GLAPI PFNGLNAMEDBUFFERDATAPROC gl_named_buffer_data;

typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer,
                                                     GLintptr offset,
                                                     GLsizeiptr size,
                                                     const void* data);

GLAPI PFNGLNAMEDBUFFERSUBDATAPROC gl_named_buffer_sub_data;

typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer,
                                                         GLuint writeBuffer,
                                                         GLintptr readOffset,
                                                         GLintptr writeOffset,
                                                         GLsizeiptr size);

GLAPI PFNGLCOPYNAMEDBUFFERSUBDATAPROC gl_copy_named_buffer_sub_data;

typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer,
                                                       GLenum internalformat,
                                                       GLenum format,
                                                       GLenum type,
                                                       const void* data);

GLAPI PFNGLCLEARNAMEDBUFFERDATAPROC gl_clear_named_buffer_data;

typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer,
                                                          GLenum internalformat,
                                                          GLintptr offset,
                                                          GLsizeiptr size,
                                                          GLenum format,
                                                          GLenum type,
                                                          const void* data);

GLAPI PFNGLCLEARNAMEDBUFFERSUBDATAPROC gl_clear_named_buffer_sub_data;

typedef void* (APIENTRYP PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);

GLAPI PFNGLMAPNAMEDBUFFERPROC gl_map_named_buffer;

typedef void* (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer,
                                                       GLintptr offset,
                                                       GLsizeiptr length,
                                                       GLbitfield access);

GLAPI PFNGLMAPNAMEDBUFFERRANGEPROC gl_map_named_buffer_range;

typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);

GLAPI PFNGLUNMAPNAMEDBUFFERPROC gl_unmap_named_buffer;

typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer,
                                                              GLintptr offset,
                                                              GLsizeiptr length);

GLAPI PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC gl_flush_mapped_named_buffer_range;

typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer,
                                                            GLenum pname,
                                                            GLint* params);

GLAPI PFNGLGETNAMEDBUFFERPARAMETERIVPROC gl_get_named_buffer_parameteriv;

typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer,
                                                              GLenum pname,
                                                              GLint64* params);

GLAPI PFNGLGETNAMEDBUFFERPARAMETERI64VPROC gl_get_named_buffer_parameteri_64v;

typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer,
                                                         GLenum pname,
                                                         void** params);

GLAPI PFNGLGETNAMEDBUFFERPOINTERVPROC gl_get_named_buffer_pointerv;

typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer,
                                                        GLintptr offset,
                                                        GLsizeiptr size,
                                                        void* data);

GLAPI PFNGLGETNAMEDBUFFERSUBDATAPROC gl_get_named_buffer_sub_data;

typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n,
                                                     GLuint* framebuffers);

GLAPI PFNGLCREATEFRAMEBUFFERSPROC gl_create_framebuffers;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(
  GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget,
  GLuint renderbuffer);

GLAPI PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC gl_named_framebuffer_renderbuffer;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer,
                                                             GLenum pname,
                                                             GLint param);

GLAPI PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC gl_named_framebuffer_parameteri;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer,
                                                          GLenum attachment,
                                                          GLuint texture,
                                                          GLint level);

GLAPI PFNGLNAMEDFRAMEBUFFERTEXTUREPROC gl_named_framebuffer_texture;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(
  GLuint framebuffer, GLenum attachment, GLuint texture, GLint level,
  GLint layer);

GLAPI PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC gl_named_framebuffer_texture_layer;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer,
                                                             GLenum buf);

GLAPI PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC gl_named_framebuffer_draw_buffer;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(
  GLuint framebuffer, GLsizei n, const GLenum* bufs);

GLAPI PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC gl_named_framebuffer_draw_buffers;

typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer,
                                                             GLenum src);

GLAPI PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC gl_named_framebuffer_read_buffer;

typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(
  GLuint framebuffer, GLsizei numAttachments, const GLenum* attachments);

GLAPI PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC gl_invalidate_named_framebuffer_data;

typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(
  GLuint framebuffer, GLsizei numAttachments, const GLenum* attachments,
  GLint x, GLint y, GLsizei width, GLsizei height);

GLAPI PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC gl_invalidate_named_framebuffer_sub_data;

typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer,
                                                          GLenum buffer,
                                                          GLint drawbuffer,
                                                          const GLint* value);

GLAPI PFNGLCLEARNAMEDFRAMEBUFFERIVPROC gl_clear_named_framebufferiv;

typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer,
                                                           GLenum buffer,
                                                           GLint drawbuffer,
                                                           const GLuint* value);

GLAPI PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC gl_clear_named_framebufferuiv;

typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer,
                                                          GLenum buffer,
                                                          GLint drawbuffer,
                                                          const GLfloat* value);

GLAPI PFNGLCLEARNAMEDFRAMEBUFFERFVPROC gl_clear_named_framebufferfv;

typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer,
                                                          GLenum buffer,
                                                          GLint drawbuffer,
                                                          GLfloat depth,
                                                          GLint stencil);

GLAPI PFNGLCLEARNAMEDFRAMEBUFFERFIPROC gl_clear_named_framebufferfi;

typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer,
                                                       GLuint drawFramebuffer,
                                                       GLint srcX0, GLint srcY0,
                                                       GLint srcX1, GLint srcY1,
                                                       GLint dstX0, GLint dstY0,
                                                       GLint dstX1, GLint dstY1,
                                                       GLbitfield mask,
                                                       GLenum filter);

GLAPI PFNGLBLITNAMEDFRAMEBUFFERPROC gl_blit_named_framebuffer;

typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(
  GLuint framebuffer, GLenum target);

GLAPI PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC gl_check_named_framebuffer_status;

typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(
  GLuint framebuffer, GLenum pname, GLint* param);

GLAPI PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC gl_get_named_framebuffer_parameteriv;

typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(
  GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params);

GLAPI PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl_get_named_framebuffer_attachment_parameteriv;

typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC)(GLsizei n,
                                                      GLuint* renderbuffers);

GLAPI PFNGLCREATERENDERBUFFERSPROC gl_create_renderbuffers;

typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer,
                                                           GLenum internalformat,
                                                           GLsizei width,
                                                           GLsizei height);

GLAPI PFNGLNAMEDRENDERBUFFERSTORAGEPROC gl_named_renderbuffer_storage;

typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(
  GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width,
  GLsizei height);

GLAPI PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC gl_named_renderbuffer_storage_multisample;

typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(
  GLuint renderbuffer, GLenum pname, GLint* params);

GLAPI PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC gl_get_named_renderbuffer_parameteriv;

typedef void (APIENTRYP PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n,
                                                 GLuint* textures);

GLAPI PFNGLCREATETEXTURESPROC gl_create_textures;

typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC)(GLuint texture,
                                                GLenum internalformat,
                                                GLuint buffer);

GLAPI PFNGLTEXTUREBUFFERPROC gl_texture_buffer;

typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture,
                                                     GLenum internalformat,
                                                     GLuint buffer,
                                                     GLintptr offset,
                                                     GLsizeiptr size);

GLAPI PFNGLTEXTUREBUFFERRANGEPROC gl_texture_buffer_range;

typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC)(GLuint texture,
                                                   GLsizei levels,
                                                   GLenum internalformat,
                                                   GLsizei width);

GLAPI PFNGLTEXTURESTORAGE1DPROC gl_texture_storage_1d;

typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC)(GLuint texture,
                                                   GLsizei levels,
                                                   GLenum internalformat,
                                                   GLsizei width,
                                                   GLsizei height);

GLAPI PFNGLTEXTURESTORAGE2DPROC gl_texture_storage_2d;

typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC)(GLuint texture,
                                                   GLsizei levels,
                                                   GLenum internalformat,
                                                   GLsizei width,
                                                   GLsizei height,
                                                   GLsizei depth);

GLAPI PFNGLTEXTURESTORAGE3DPROC gl_texture_storage_3d;

typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture,
                                                              GLsizei samples,
                                                              GLenum internalformat,
                                                              GLsizei width,
                                                              GLsizei height,
                                                              GLboolean fixedsamplelocations);

GLAPI PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC gl_texture_storage_2d_multisample;

typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture,
                                                              GLsizei samples,
                                                              GLenum internalformat,
                                                              GLsizei width,
                                                              GLsizei height,
                                                              GLsizei depth,
                                                              GLboolean fixedsamplelocations);

GLAPI PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC gl_texture_storage_3d_multisample;

typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level,
                                                    GLint xoffset,
                                                    GLsizei width,
                                                    GLenum format, GLenum type,
                                                    const void* pixels);

GLAPI PFNGLTEXTURESUBIMAGE1DPROC gl_texture_sub_image_1d;

typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level,
                                                    GLint xoffset,
                                                    GLint yoffset,
                                                    GLsizei width,
                                                    GLsizei height,
                                                    GLenum format, GLenum type,
                                                    const void* pixels);

GLAPI PFNGLTEXTURESUBIMAGE2DPROC gl_texture_sub_image_2d;

typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level,
                                                    GLint xoffset,
                                                    GLint yoffset,
                                                    GLint zoffset,
                                                    GLsizei width,
                                                    GLsizei height,
                                                    GLsizei depth,
                                                    GLenum format, GLenum type,
                                                    const void* pixels);

GLAPI PFNGLTEXTURESUBIMAGE3DPROC gl_texture_sub_image_3d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture,
                                                              GLint level,
                                                              GLint xoffset,
                                                              GLsizei width,
                                                              GLenum format,
                                                              GLsizei imageSize,
                                                              const void* data);

GLAPI PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC gl_compressed_texture_sub_image_1d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture,
                                                              GLint level,
                                                              GLint xoffset,
                                                              GLint yoffset,
                                                              GLsizei width,
                                                              GLsizei height,
                                                              GLenum format,
                                                              GLsizei imageSize,
                                                              const void* data);

GLAPI PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC gl_compressed_texture_sub_image_2d;

typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture,
                                                              GLint level,
                                                              GLint xoffset,
                                                              GLint yoffset,
                                                              GLint zoffset,
                                                              GLsizei width,
                                                              GLsizei height,
                                                              GLsizei depth,
                                                              GLenum format,
                                                              GLsizei imageSize,
                                                              const void* data);

GLAPI PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC gl_compressed_texture_sub_image_3d;

typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture,
                                                        GLint level,
                                                        GLint xoffset, GLint x,
                                                        GLint y, GLsizei width);

GLAPI PFNGLCOPYTEXTURESUBIMAGE1DPROC gl_copy_texture_sub_image_1d;

typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture,
                                                        GLint level,
                                                        GLint xoffset,
                                                        GLint yoffset, GLint x,
                                                        GLint y, GLsizei width,
                                                        GLsizei height);

GLAPI PFNGLCOPYTEXTURESUBIMAGE2DPROC gl_copy_texture_sub_image_2d;

typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture,
                                                        GLint level,
                                                        GLint xoffset,
                                                        GLint yoffset,
                                                        GLint zoffset, GLint x,
                                                        GLint y, GLsizei width,
                                                        GLsizei height);

GLAPI PFNGLCOPYTEXTURESUBIMAGE3DPROC gl_copy_texture_sub_image_3d;

typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC)(GLuint texture,
                                                    GLenum pname,
                                                    GLfloat param);

GLAPI PFNGLTEXTUREPARAMETERFPROC gl_texture_parameterf;

typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture,
                                                     GLenum pname,
                                                     const GLfloat* param);

GLAPI PFNGLTEXTUREPARAMETERFVPROC gl_texture_parameterfv;

typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC)(GLuint texture,
                                                    GLenum pname, GLint param);

GLAPI PFNGLTEXTUREPARAMETERIPROC gl_texture_parameteri;

typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture,
                                                      GLenum pname,
                                                      const GLint* params);

GLAPI PFNGLTEXTUREPARAMETERIIVPROC gl_texture_parameter_iiv;

typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture,
                                                       GLenum pname,
                                                       const GLuint* params);

GLAPI PFNGLTEXTUREPARAMETERIUIVPROC gl_texture_parameter_iuiv;

typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture,
                                                     GLenum pname,
                                                     const GLint* param);

GLAPI PFNGLTEXTUREPARAMETERIVPROC gl_texture_parameteriv;

typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);

GLAPI PFNGLGENERATETEXTUREMIPMAPPROC gl_generate_texture_mipmap;

typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);

GLAPI PFNGLBINDTEXTUREUNITPROC gl_bind_texture_unit;

typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level,
                                                  GLenum format, GLenum type,
                                                  GLsizei bufSize,
                                                  void* pixels);

GLAPI PFNGLGETTEXTUREIMAGEPROC gl_get_texture_image;

typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture,
                                                            GLint level,
                                                            GLsizei bufSize,
                                                            void* pixels);

GLAPI PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC gl_get_compressed_texture_image;

typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture,
                                                             GLint level,
                                                             GLenum pname,
                                                             GLfloat* params);

GLAPI PFNGLGETTEXTURELEVELPARAMETERFVPROC gl_get_texture_level_parameterfv;

typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture,
                                                             GLint level,
                                                             GLenum pname,
                                                             GLint* params);

GLAPI PFNGLGETTEXTURELEVELPARAMETERIVPROC gl_get_texture_level_parameteriv;

typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture,
                                                        GLenum pname,
                                                        GLfloat* params);

GLAPI PFNGLGETTEXTUREPARAMETERFVPROC gl_get_texture_parameterfv;

typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture,
                                                         GLenum pname,
                                                         GLint* params);

GLAPI PFNGLGETTEXTUREPARAMETERIIVPROC gl_get_texture_parameter_iiv;

typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture,
                                                          GLenum pname,
                                                          GLuint* params);

GLAPI PFNGLGETTEXTUREPARAMETERIUIVPROC gl_get_texture_parameter_iuiv;

typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture,
                                                        GLenum pname,
                                                        GLint* params);

GLAPI PFNGLGETTEXTUREPARAMETERIVPROC gl_get_texture_parameteriv;

typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint* arrays);

GLAPI PFNGLCREATEVERTEXARRAYSPROC gl_create_vertex_arrays;

typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj,
                                                           GLuint index);

GLAPI PFNGLDISABLEVERTEXARRAYATTRIBPROC gl_disable_vertex_array_attrib;

typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj,
                                                          GLuint index);

GLAPI PFNGLENABLEVERTEXARRAYATTRIBPROC gl_enable_vertex_array_attrib;

typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj,
                                                           GLuint buffer);

GLAPI PFNGLVERTEXARRAYELEMENTBUFFERPROC gl_vertex_array_element_buffer;

typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj,
                                                          GLuint bindingindex,
                                                          GLuint buffer,
                                                          GLintptr offset,
                                                          GLsizei stride);

GLAPI PFNGLVERTEXARRAYVERTEXBUFFERPROC gl_vertex_array_vertex_buffer;

typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj,
                                                           GLuint first,
                                                           GLsizei count,
                                                           const GLuint* buffers,
                                                           const GLintptr* offsets,
                                                           const GLsizei* strides);

GLAPI PFNGLVERTEXARRAYVERTEXBUFFERSPROC gl_vertex_array_vertex_buffers;

typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj,
                                                           GLuint attribindex,
                                                           GLuint bindingindex);

GLAPI PFNGLVERTEXARRAYATTRIBBINDINGPROC gl_vertex_array_attrib_binding;

typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj,
                                                          GLuint attribindex,
                                                          GLint size,
                                                          GLenum type,
                                                          GLboolean normalized,
                                                          GLuint relativeoffset);

GLAPI PFNGLVERTEXARRAYATTRIBFORMATPROC gl_vertex_array_attrib_format;

typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj,
                                                           GLuint attribindex,
                                                           GLint size,
                                                           GLenum type,
                                                           GLuint relativeoffset);

GLAPI PFNGLVERTEXARRAYATTRIBIFORMATPROC gl_vertex_array_attrib_i_format;

typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj,
                                                           GLuint attribindex,
                                                           GLint size,
                                                           GLenum type,
                                                           GLuint relativeoffset);

GLAPI PFNGLVERTEXARRAYATTRIBLFORMATPROC gl_vertex_array_attrib_l_format;

typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj,
                                                            GLuint bindingindex,
                                                            GLuint divisor);

GLAPI PFNGLVERTEXARRAYBINDINGDIVISORPROC gl_vertex_array_binding_divisor;

typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname,
                                                   GLint* param);

GLAPI PFNGLGETVERTEXARRAYIVPROC gl_get_vertex_arrayiv;

typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj,
                                                          GLuint index,
                                                          GLenum pname,
                                                          GLint* param);

GLAPI PFNGLGETVERTEXARRAYINDEXEDIVPROC gl_get_vertex_array_indexediv;

typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj,
                                                            GLuint index,
                                                            GLenum pname,
                                                            GLint64* param);

GLAPI PFNGLGETVERTEXARRAYINDEXED64IVPROC gl_get_vertex_array_indexed_64iv;

typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint* samplers);

GLAPI PFNGLCREATESAMPLERSPROC gl_create_samplers;

typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n,
                                                         GLuint* pipelines);

GLAPI PFNGLCREATEPROGRAMPIPELINESPROC gl_create_program_pipelines;

typedef void (APIENTRYP PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n,
                                                GLuint* ids);

GLAPI PFNGLCREATEQUERIESPROC gl_create_queries;

typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id,
                                                           GLuint buffer,
                                                           GLenum pname,
                                                           GLintptr offset);

GLAPI PFNGLGETQUERYBUFFEROBJECTI64VPROC gl_get_query_buffer_objecti_64v;

typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id,
                                                         GLuint buffer,
                                                         GLenum pname,
                                                         GLintptr offset);

GLAPI PFNGLGETQUERYBUFFEROBJECTIVPROC gl_get_query_buffer_objectiv;

typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id,
                                                            GLuint buffer,
                                                            GLenum pname,
                                                            GLintptr offset);

GLAPI PFNGLGETQUERYBUFFEROBJECTUI64VPROC gl_get_query_buffer_objectui_64v;

typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id,
                                                          GLuint buffer,
                                                          GLenum pname,
                                                          GLintptr offset);

GLAPI PFNGLGETQUERYBUFFEROBJECTUIVPROC gl_get_query_buffer_objectuiv;

typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);

GLAPI PFNGLMEMORYBARRIERBYREGIONPROC gl_memory_barrier_by_region;

typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture,
                                                     GLint level, GLint xoffset,
                                                     GLint yoffset,
                                                     GLint zoffset,
                                                     GLsizei width,
                                                     GLsizei height,
                                                     GLsizei depth,
                                                     GLenum format, GLenum type,
                                                     GLsizei bufSize,
                                                     void* pixels);

GLAPI PFNGLGETTEXTURESUBIMAGEPROC gl_get_texture_sub_image;

typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture,
                                                               GLint level,
                                                               GLint xoffset,
                                                               GLint yoffset,
                                                               GLint zoffset,
                                                               GLsizei width,
                                                               GLsizei height,
                                                               GLsizei depth,
                                                               GLsizei bufSize,
                                                               void* pixels);

GLAPI PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC gl_get_compressed_texture_sub_image;

typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC)(void);

GLAPI PFNGLGETGRAPHICSRESETSTATUSPROC gl_get_graphics_reset_status;

typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target,
                                                         GLint lod,
                                                         GLsizei bufSize,
                                                         void* pixels);

GLAPI PFNGLGETNCOMPRESSEDTEXIMAGEPROC gl_getn_compressed_tex_image;

typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC)(GLenum target, GLint level,
                                               GLenum format, GLenum type,
                                               GLsizei bufSize, void* pixels);

GLAPI PFNGLGETNTEXIMAGEPROC gl_getn_tex_image;

typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC)(GLuint program, GLint location,
                                                GLsizei bufSize,
                                                GLdouble* params);

GLAPI PFNGLGETNUNIFORMDVPROC gl_getn_uniformdv;

typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location,
                                                GLsizei bufSize,
                                                GLfloat* params);

GLAPI PFNGLGETNUNIFORMFVPROC gl_getn_uniformfv;

typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location,
                                                GLsizei bufSize, GLint* params);

GLAPI PFNGLGETNUNIFORMIVPROC gl_getn_uniformiv;

typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location,
                                                 GLsizei bufSize,
                                                 GLuint* params);

GLAPI PFNGLGETNUNIFORMUIVPROC gl_getn_uniformuiv;

typedef void (APIENTRYP PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width,
                                              GLsizei height, GLenum format,
                                              GLenum type, GLsizei bufSize,
                                              void* data);

GLAPI PFNGLREADNPIXELSPROC gl_readn_pixels;

typedef void (APIENTRYP PFNGLGETNMAPDVPROC)(GLenum target, GLenum query,
                                            GLsizei bufSize, GLdouble* v);

GLAPI PFNGLGETNMAPDVPROC gl_getn_mapdv;

typedef void (APIENTRYP PFNGLGETNMAPFVPROC)(GLenum target, GLenum query,
                                            GLsizei bufSize, GLfloat* v);

GLAPI PFNGLGETNMAPFVPROC gl_getn_mapfv;

typedef void (APIENTRYP PFNGLGETNMAPIVPROC)(GLenum target, GLenum query,
                                            GLsizei bufSize, GLint* v);

GLAPI PFNGLGETNMAPIVPROC gl_getn_mapiv;

typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC)(GLenum map, GLsizei bufSize,
                                                 GLfloat* values);

GLAPI PFNGLGETNPIXELMAPFVPROC gl_getn_pixel_mapfv;

typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC)(GLenum map, GLsizei bufSize,
                                                  GLuint* values);

GLAPI PFNGLGETNPIXELMAPUIVPROC gl_getn_pixel_mapuiv;

typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC)(GLenum map, GLsizei bufSize,
                                                  GLushort* values);

GLAPI PFNGLGETNPIXELMAPUSVPROC gl_getn_pixel_mapusv;

typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC)(GLsizei bufSize,
                                                     GLubyte* pattern);

GLAPI PFNGLGETNPOLYGONSTIPPLEPROC gl_getn_polygon_stipple;

typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC)(GLenum target, GLenum format,
                                                 GLenum type, GLsizei bufSize,
                                                 void* table);

GLAPI PFNGLGETNCOLORTABLEPROC gl_getn_color_table;

typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC)(GLenum target,
                                                        GLenum format,
                                                        GLenum type,
                                                        GLsizei bufSize,
                                                        void* image);

GLAPI PFNGLGETNCONVOLUTIONFILTERPROC gl_getn_convolution_filter;

typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC)(GLenum target,
                                                      GLenum format,
                                                      GLenum type,
                                                      GLsizei rowBufSize,
                                                      void* row,
                                                      GLsizei columnBufSize,
                                                      void* column, void* span);

GLAPI PFNGLGETNSEPARABLEFILTERPROC gl_getn_separable_filter;

typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC)(GLenum target, GLboolean reset,
                                                GLenum format, GLenum type,
                                                GLsizei bufSize, void* values);

GLAPI PFNGLGETNHISTOGRAMPROC gl_getn_histogram;

typedef void (APIENTRYP PFNGLGETNMINMAXPROC)(GLenum target, GLboolean reset,
                                             GLenum format, GLenum type,
                                             GLsizei bufSize, void* values);

GLAPI PFNGLGETNMINMAXPROC gl_getn_minmax;

typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC)(void);

GLAPI PFNGLTEXTUREBARRIERPROC gl_texture_barrier;
#endif
#ifndef GL_VERSION_4_6
#define GL_VERSION_4_6 1
GLAPI int GLAD_GL_VERSION_4_6;

typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC)(GLuint shader,
                                                   const GLchar* pEntryPoint,
                                                   GLuint numSpecializationConstants,
                                                   const GLuint* pConstantIndex,
                                                   const GLuint* pConstantValue);

GLAPI PFNGLSPECIALIZESHADERPROC gl_specialize_shader;

typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)(GLenum mode,
                                                               const void* indirect,
                                                               GLintptr drawcount,
                                                               GLsizei maxdrawcount,
                                                               GLsizei stride);

GLAPI PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC gl_multi_draw_arrays_indirect_count;

typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)(GLenum mode,
                                                                 GLenum type,
                                                                 const void* indirect,
                                                                 GLintptr drawcount,
                                                                 GLsizei maxdrawcount,
                                                                 GLsizei stride);

GLAPI PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC gl_multi_draw_elements_indirect_count;

typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC)(GLfloat factor,
                                                     GLfloat units,
                                                     GLfloat clamp);

GLAPI PFNGLPOLYGONOFFSETCLAMPPROC gl_polygon_offset_clamp;
#endif

#ifdef __cplusplus
}
#endif

#endif
